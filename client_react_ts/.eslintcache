[{"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx":"1","/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts":"2","/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx":"3","/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js":"4","/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts":"5","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts":"6","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts":"7","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx":"8","/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx":"9","/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx":"10","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx":"11","/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx":"12","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts":"13","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts":"14","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx":"15","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx":"16","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx":"17","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx":"18","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx":"19","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx":"20","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx":"21","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx":"22","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts":"23","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx":"24","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx":"25","/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx":"26","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx":"27","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx":"28","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx":"29","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx":"30","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx":"31","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx":"32","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx":"33","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx":"34","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx":"35","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx":"36","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx":"37","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx":"38","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts":"39","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts":"40","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts":"41","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts":"42","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx":"43","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx":"44","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx":"45","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx":"46","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx":"47","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx":"48","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx":"49","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx":"50","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx":"51","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx":"52","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx":"53","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx":"54","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx":"55","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx":"56","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx":"57","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx":"58","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx":"59","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx":"60","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts":"61"},{"size":478,"mtime":1617144646218,"results":"62","hashOfConfig":"63"},{"size":425,"mtime":1615915047592,"results":"64","hashOfConfig":"63"},{"size":2219,"mtime":1618261295496,"results":"65","hashOfConfig":"63"},{"size":99,"mtime":1618011299432,"results":"66","hashOfConfig":"63"},{"size":640,"mtime":1618094533005,"results":"67","hashOfConfig":"63"},{"size":699,"mtime":1616176850171,"results":"68","hashOfConfig":"63"},{"size":2624,"mtime":1616176850019,"results":"69","hashOfConfig":"63"},{"size":1170,"mtime":1617466568147,"results":"70","hashOfConfig":"63"},{"size":2176,"mtime":1617924951374,"results":"71","hashOfConfig":"63"},{"size":1311,"mtime":1615915047584,"results":"72","hashOfConfig":"63"},{"size":2537,"mtime":1615928883772,"results":"73","hashOfConfig":"63"},{"size":541,"mtime":1616176849711,"results":"74","hashOfConfig":"63"},{"size":331,"mtime":1615915047592,"results":"75","hashOfConfig":"63"},{"size":2220,"mtime":1617301189290,"results":"76","hashOfConfig":"63"},{"size":978,"mtime":1617839214909,"results":"77","hashOfConfig":"63"},{"size":873,"mtime":1617663910643,"results":"78","hashOfConfig":"63"},{"size":1196,"mtime":1617393041031,"results":"79","hashOfConfig":"63"},{"size":3216,"mtime":1617743364726,"results":"80","hashOfConfig":"63"},{"size":3330,"mtime":1617743444944,"results":"81","hashOfConfig":"63"},{"size":1181,"mtime":1617393041031,"results":"82","hashOfConfig":"63"},{"size":988,"mtime":1617393041031,"results":"83","hashOfConfig":"63"},{"size":453,"mtime":1617320585941,"results":"84","hashOfConfig":"63"},{"size":840,"mtime":1615915047592,"results":"85","hashOfConfig":"63"},{"size":1046,"mtime":1615915047588,"results":"86","hashOfConfig":"63"},{"size":471,"mtime":1615915047588,"results":"87","hashOfConfig":"63"},{"size":2078,"mtime":1615915047584,"results":"88","hashOfConfig":"63"},{"size":869,"mtime":1617393041031,"results":"89","hashOfConfig":"63"},{"size":312,"mtime":1617393041063,"results":"90","hashOfConfig":"63"},{"size":1130,"mtime":1617393041031,"results":"91","hashOfConfig":"63"},{"size":3188,"mtime":1618261295520,"results":"92","hashOfConfig":"63"},{"size":1479,"mtime":1617393041031,"results":"93","hashOfConfig":"63"},{"size":1312,"mtime":1617048618887,"results":"94","hashOfConfig":"63"},{"size":1335,"mtime":1617393041031,"results":"95","hashOfConfig":"63"},{"size":1304,"mtime":1617393041031,"results":"96","hashOfConfig":"63"},{"size":1548,"mtime":1618348920613,"results":"97","hashOfConfig":"63"},{"size":1776,"mtime":1618261295496,"results":"98","hashOfConfig":"63"},{"size":1768,"mtime":1618348920613,"results":"99","hashOfConfig":"63"},{"size":2788,"mtime":1618348920613,"results":"100","hashOfConfig":"63"},{"size":1167,"mtime":1618007234783,"results":"101","hashOfConfig":"63"},{"size":412,"mtime":1618261295520,"results":"102","hashOfConfig":"63"},{"size":3773,"mtime":1618261295520,"results":"103","hashOfConfig":"63"},{"size":1465,"mtime":1617927107253,"results":"104","hashOfConfig":"63"},{"size":139,"mtime":1617316257026,"results":"105","hashOfConfig":"63"},{"size":847,"mtime":1618351906451,"results":"106","hashOfConfig":"63"},{"size":2459,"mtime":1618348920849,"results":"107","hashOfConfig":"63"},{"size":602,"mtime":1616271845772,"results":"108","hashOfConfig":"63"},{"size":710,"mtime":1617144646222,"results":"109","hashOfConfig":"63"},{"size":2021,"mtime":1618348920737,"results":"110","hashOfConfig":"63"},{"size":353,"mtime":1615915047588,"results":"111","hashOfConfig":"63"},{"size":1629,"mtime":1617918091446,"results":"112","hashOfConfig":"63"},{"size":1913,"mtime":1618261295496,"results":"113","hashOfConfig":"63"},{"size":2691,"mtime":1617839433222,"results":"114","hashOfConfig":"63"},{"size":1641,"mtime":1618348920737,"results":"115","hashOfConfig":"63"},{"size":369,"mtime":1615915047588,"results":"116","hashOfConfig":"63"},{"size":548,"mtime":1615915047588,"results":"117","hashOfConfig":"63"},{"size":2253,"mtime":1617919757696,"results":"118","hashOfConfig":"63"},{"size":919,"mtime":1617919904504,"results":"119","hashOfConfig":"63"},{"size":1702,"mtime":1617917293460,"results":"120","hashOfConfig":"63"},{"size":1234,"mtime":1618348920849,"results":"121","hashOfConfig":"63"},{"size":1426,"mtime":1618358414114,"results":"122","hashOfConfig":"63"},{"size":264,"mtime":1618348920849,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"8hdc3h",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"126"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx",[],["268","269"],"/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js",[],["270","271"],"/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx",["272","273"],"import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/rootReducer\";\nimport { reciboPaths, addPaths, showPaths } from \"../paths\";\nimport { Button, Divider, Grid } from \"@material-ui/core\";\n\nconst Home = () => {\n  const user: any = useSelector((state: RootState) => state.user);\n\n  const addPathsBtn = addPaths.map((path) => {\n    return (\n      <Grid item key={path}>\n        <Button variant=\"contained\">\n          <Link to={path}>Agregar {path.slice(5)}</Link>\n        </Button>\n      </Grid>\n    );\n  });\n  const showPathsBtn = showPaths.map((path) => {\n    return (\n      <Grid item key={path}>\n        <Button variant=\"contained\">\n          <Link to={path}>Ver {path.slice(6)}</Link>\n        </Button>\n      </Grid>\n    );\n  });\n\n\n  return (\n    <div>\n      <h1> Home </h1>\n      <pre>authenticated: {user.authenticated ? \"true\" : \"false\"}</pre>\n      <Grid container spacing={5}>\n        <Grid item container spacing={1}>\n          {addPathsBtn}\n        </Grid>\n        <Grid item container spacing={1}>\n          {showPathsBtn}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts",["274"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//TODO: agregar recibo venta transferencia\nconst initialState: Recibos = {\n  empresa_cliente_id: null,\n  usuario_id: null,\n  venta: {\n    lineas: [],\n  },\n  transferencia: {\n    lineas: [],\n  },\n};\n\ninterface Tipo {\n  tipo: string;\n}\n\nconst reciboSlice = createSlice({\n  name: \"recibos\",\n  initialState,\n  reducers: {\n    //TODO: add change qty reducer\n    addUserId: (state, action) => {\n      state.usuario_id = action.payload;\n    },\n    delUserId: (state) => {\n      state.usuario_id = null;\n    },\n    addClienteId: (state, action) => {\n      console.log(action.payload);\n      state.empresa_cliente_id = action.payload;\n    },\n    modQty: (state, action) => {\n      console.log(action.payload);\n      const tipoRecibo = action.payload.tipo;\n      let { idx, qty } = action.payload;\n      if (qty < 0) qty = 0\n      state[tipoRecibo].lineas[idx].qty = qty;\n    },\n    pushLinea: (state, action: PayloadAction<Lineas & Tipo>) => {\n      //TODO: revisar si existe o no el item pusheado, si qty del payload es mayor actualizar la qty\n      const tipoRecibo = action.payload.tipo;\n      const hasId = state[tipoRecibo].lineas.some(\n        (linea) => linea.id === action.payload.id\n      );\n      if (hasId) {\n        state[tipoRecibo].lineas.filter((linea, idx) => {\n          if (linea.id === action.payload.id) {\n            state[tipoRecibo].lineas[idx] = action.payload;\n          }\n        });\n      } else {\n        state[tipoRecibo].lineas.push(action.payload);\n      }\n    },\n    addRecibo: (state, action: PayloadAction<Recibos & Tipo>) => {\n      const tipoRecibo = action.payload.tipo;\n      state[tipoRecibo] = action.payload;\n    },\n    deleteLinea: (state, action: PayloadAction<Tipo & { item_id: number }>) => {\n      const tipoRecibo = action.payload.tipo;\n      console.log(action.payload);\n      const newArr = state[tipoRecibo].lineas.filter(\n        (linea) => linea.id !== action.payload.item_id\n      );\n      state[tipoRecibo].lineas = newArr;\n    },\n  },\n});\n\nexport const {\n  addUserId,\n  delUserId,\n  addClienteId,\n  pushLinea,\n  modQty,\n  addRecibo,\n  deleteLinea,\n} = reciboSlice.actions;\n\nexport default reciboSlice.reducer;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx",["275","276"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n}));\n\nexport default function ShowTransferencias() {\n    const classes = useStyles();\n\n    const url = '/recibos/transferencia'\n    const { data, setData } = useFetchData(url)\n\n    const accordionView = data.map(obj =>\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>N° Recibo: {obj.id}</Typography>\n                <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n                <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Descripcion</TableCell>\n                                <TableCell align=\"center\">Qty</TableCell>\n                                <TableCell align=\"right\">Origen</TableCell>\n                                <TableCell align=\"right\">Destino</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {obj.lineas.map(linea => (\n                                <TableRow key={linea.id}>\n                                    <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                                    <TableCell align=\"left\">\n                                        {linea.qty}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{`${linea.item.lugar.direccion}, ${linea.item.lugar.tipo}`}</TableCell>\n                                    <TableCell align=\"right\">\n                                        {`${linea.destino.direccion}, ${linea.destino.tipo}`}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    )\n\n    return (\n        <>\n            <Typography variant='h3'>Recibos Ventas</Typography>\n            {accordionView}\n        </>\n    )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx",["277","278"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n}));\n\nexport default function ShowVentas() {\n  const classes = useStyles();\n\n  const url = '/recibos/venta'\n  const { data, setData } = useFetchData(url)\n\n  const accordionView = data.map(obj =>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography >N° Recibo: {obj.id}</Typography>\n        <Typography className={classes.heading}>Ciente: {obj.cliente.nombre}</Typography>\n        <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n        <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Qty</TableCell>\n                <TableCell align=\"center\">Descripcion</TableCell>\n                <TableCell align=\"right\">Precio</TableCell>\n                <TableCell align=\"right\">Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {obj.lineas.map(linea => (\n                <TableRow key={linea.id}>\n                  <TableCell align=\"left\">\n                    {linea.qty}\n                  </TableCell>\n                  <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                  <TableCell align=\"right\">{linea.precio.toFixed(2)}</TableCell>\n                  <TableCell align=\"right\">\n                    {(linea.precio * linea.qty).toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell rowSpan={3} />\n                <TableCell colSpan={2}>Subtotal</TableCell>\n                <TableCell align=\"right\">{obj.sub_total}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={1}>Tax</TableCell>\n                <TableCell align=\"right\">{`${(obj.tax * 100).toFixed(0)} %`}</TableCell>\n                <TableCell align=\"right\">{obj.tax}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2}>Total</TableCell>\n                <TableCell align=\"right\">{obj.total}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n    </Accordion>\n  )\n\n  return (\n    <>\n      <Typography variant='h3'>Recibos Ventas</Typography>\n      {accordionView}\n    </>\n  )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts",["279"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchData(url, method = \"get\") {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState(\"\");\n  console.log(error);\n  console.log(\"fetch api\", url);\n  useEffect(() => {\n    console.log(\"use effect fetchDatafrom api\");\n    const fetchDataFromApi = async () => {\n      try {\n        setIsFetching(true);\n        const res = await axios[method](url);\n        setData(res.data);\n        console.log(\"useFetchData res.data:  \", res.data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setIsFetching(false);\n      }\n    };\n    fetchDataFromApi();\n  }, [url]);\n  console.log(error);\n  return { data, setData, isFetching, error };\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx",["280"],"import { localIp } from \"../../../localIp\";\nimport { useState } from \"react\";\nimport useFetchData from \"../../../utils/hooks/useFetchData\";\nimport Fab from \"../../../components/FloatBtnAdd\";\nimport EditFormDialog from \"../../../components/EditableField/EditFormDialog\";\nimport DeleteBtn from \"../../../components/DeleteBtn\";\nimport AddBtn from \"./components/AddBtn\";\n\nimport {\n  Paper,\n  MobileStepper,\n  Typography,\n  Button,\n  CardContent,\n  CardActions,\n  Card,\n  Grid,\n} from \"@material-ui/core/\";\n\nexport default function ShowItems() {\n  const url = \"/items\";\n  const { data, setData } = useFetchData(url);\n  const [activeStep, setActiveStep] = useState(0);\n\n  const cardView = data.map((obj) => {\n    const src = \"http://\" + localIp + \":5050/uploads/\";\n    const imgPlaceholder = \"https://via.placeholder.com/200\";\n    const activeImg =\n      obj.images.length > 0\n        ? src + obj.images[activeStep].url_path\n        : imgPlaceholder;\n    const maxSteps = obj.images.length;\n    return (\n      <Grid item xs={12} sm={6} md={4} lg={3} key={obj.id}>\n        <Card\n          style={{\n            maxWidth: 300,\n          }}\n        >\n          <img key=\"img\" src={activeImg} alt={obj.marca + \"-\" + obj.modelo} />\n          <MobileStepper\n            key=\"mobileStepper\"\n            steps={maxSteps}\n            position=\"static\"\n            variant=\"text\"\n            nextButton={\n              <Button\n                id=\"mobileSteperNextBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep + 1)\n                }\n                disabled={activeStep === maxSteps - 1}\n              >\n                Next\n              </Button>\n            }\n            backButton={\n              <Button\n                id=\"mobileSteperBackBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep - 1)\n                }\n                disabled={activeStep === 0}\n              >\n                Back\n              </Button>\n            }\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {`${obj.marca} ${obj.modelo} ${obj.color} ${obj.descripcion}`}\n            </Typography>\n            <EditFormDialog name={\"descripcion\"} data={obj} url={url} />\n            <Typography>\n              {`Ubicacion: ${obj.lugar.direccion}, ${obj.lugar.tipo}. | Stock: ${obj.stock}`}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <DeleteBtn url={url} id={obj.id} data={data} setData={setData} />\n            <AddBtn obj={obj} reciboTipo=\"venta\">\n              agregar a venta\n            </AddBtn>\n            <AddBtn obj={obj} reciboTipo=\"transferencia\">\n              transferir\n            </AddBtn>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  });\n  return (\n    <>\n      <Typography variant=\"h3\">Items</Typography>\n      <Grid\n        container\n        spacing={2}\n        justify=\"center\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        {cardView}\n      </Grid>\n      <Fab url=\"/add/item\" />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx",["281"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport useForm from \"../../utils/hooks/useForm\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Defectuoso {\n  descripcion: string;\n}\n\nexport default function AddDefectuoso(props: any) {\n  const classes = useStyle();\n  const { data, handleSubmit, handleChange } = useForm<Defectuoso>(\n    {\n      descripcion: \"\",\n    },\n    \"/defectuoso\"\n  );\n  //   const [previewImg, setPreviewImg] = useState(\"\");\n\n  const defectuosoDetails = [\"descripcion\"];\n\n  const renderTextField = defectuosoDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Defectuoso</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          form={data}\n          onChange={handleChange}\n          name=\"items\"\n          url=\"items\"\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx",["282","283","284"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\nimport useFormImage from \"../../utils/hooks/useFormImage\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Cliente {\n  nombre: string;\n  telefono: string;\n  direccion: string;\n  email: string;\n  logo_url: string;\n  website_url: string;\n  telefono_2: string;\n}\n\nexport default function AddCliente() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Cliente>(\n    {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n    \"/clientes/addUser\"\n  );\n\n  const clienteDetails = [\n    \"nombre\",\n    \"direccion\",\n    \"telefono\",\n    \"telefono 2\",\n    \"email\",\n    \"website\",\n  ];\n\n  const renderTextField = clienteDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"lg\" fixed>\n      <Typography variant=\"h2\">Agregar Cliente</Typography>\n      {renderTextField}\n      <UploadAndPreviewImages previewImg={previewImg} onChange={handleChange} />\n      {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Agregar\n      </Button>\n      <br></br>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx",["285"],"import useFormImage from \"../../utils/hooks/useFormImage\";\nimport SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\nexport default function AddUsuario() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Usuario>(\n    {\n      nombre: \"\",\n      password: \"\",\n      telefono: \"\",\n      rol_id: 1,\n    },\n    \"/usuarios/addUser\"\n  );\n\n  const usuarioDetails = [\n    \"nombre\",\n    \"password\",\n    \"telefono\",\n    \"email\",\n    \"telefono_2\",\n  ];\n\n  const renderTextField = usuarioDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Usuario</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          form={data}\n          onChange={handleChange}\n          name=\"rol\"\n          url=\"usuarios/roles\"\n        />\n        <UploadAndPreviewImages\n          previewImg={previewImg}\n          onChange={handleChange}\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx",["286","287","288"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport useFormMultipleImages from \"../../utils/hooks/useFormMultipleImages\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\nconst detailsName = [\n  \"marca\",\n  \"modelo\",\n  \"sku\",\n  \"color\",\n  \"precio\",\n  \"precio_min\",\n  \"stock\",\n  \"costo\",\n  \"descripcion\",\n];\n\nexport default function AddItem() {\n  const classes = useStyle();\n  const initialItem = {\n    marca: \"\",\n    modelo: \"\",\n    caracteritica: \"\",\n    descripcion: \"\",\n    sku: \"\",\n    color: \"\",\n    precio: null,\n    precio_min: null,\n    categoria_id: null,\n    stock: null,\n    lugar_id: null,\n    proveedor_id: null,\n    costo: null,\n  };\n  // const { data, previewImg, handleChange, handleSubmit } = useFormImage<Item>(\n  //   initialItem,\n  //   \"/items\"\n  // );\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n    handleImgChange,\n  } = useFormMultipleImages<Item>(initialItem, \"/items\");\n\n  const renderTextField = detailsName.map((name) => (\n    <Grid item>\n      <TextField\n        className={classes[name]}\n        key={name}\n        id={name}\n        name={name}\n        label={name}\n        value={data[name]}\n        onChange={handleChange}\n        // fullWidth\n        // helperText={errors[name]}\n        // error={errors[name] ? true : false}\n      />\n    </Grid>\n  ));\n\n  return (\n    <>\n      <Typography variant=\"h2\">Agregar Item</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          {renderTextField}\n        </Grid>\n\n        <Grid container spacing={2}>\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleChange}\n            name=\"categoria\"\n            url=\"categorias\"\n          />\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleChange}\n            name=\"proveedor\"\n            url=\"proveedores\"\n          />\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleChange}\n            name=\"lugar\"\n            url=\"lugares\"\n          />\n        </Grid>\n        {/* <UploadAndPreviewImages\n          previewImg={previewImg}\n          onChange={handleChange}\n        /> */}\n        <DropzoneArea onChange={handleImgChange} acceptedFiles={[\"image/*\"]} />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts",["289","290"],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport Resizer from \"react-image-file-resizer\";\n\nexport default function useForm<T>(initialState: T, url: string) {\n  const [data, setData] = useState(initialState);\n  const [previewImg, setPreviewImg] = useState(\"\");\n\n  const dataURIToFile = (dataURI, name) => {\n    const splitDataURI = dataURI.split(\",\");\n    const byteString =\n      splitDataURI[0].indexOf(\"base64\") >= 0\n        ? atob(splitDataURI[1])\n        : decodeURI(splitDataURI[1]);\n    const mimeString = splitDataURI[0].split(\":\")[1].split(\";\")[0];\n    console.log(mimeString);\n    const ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++)\n      ia[i] = byteString.charCodeAt(i);\n    return new File([ia], name, { type: mimeString });\n  };\n\n  const resizeFile = (file) =>\n    new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        file,\n        300,\n        300,\n        \"JPEG\",\n        100,\n        0,\n        (uri) => {\n          resolve(uri);\n        },\n        \"base64\"\n      );\n    });\n  const imgResize = async (files) => {\n    //multiple files\n    let newFile;\n    let fileObj: any = [];\n    let fileArray: any = [];\n    let fileBlobResize = [];\n    fileObj.push(files);\n    // fileArray.push(await resizeFile(files[0]));\n    for (let i = 0; i < fileObj[0].length; i++) {\n      console.log(\"i: \", i, \"file[0]: \", fileObj[0]);\n      console.log(\"i: \", i, \"file[0][i]\", fileObj[0][i]);\n      const image = await resizeFile(fileObj[0][i]);\n      fileArray.push(image);\n      newFile = dataURIToFile(image, fileObj[0][i].name);\n      fileBlobResize.push(newFile);\n    }\n    return { fileArray, fileBlobResize, newFile };\n  };\n\n  const handleImgChange = async (files) => {\n    const { fileBlobResize, newFile } = await imgResize(files);\n    setData((value) => ({ ...value, images: fileBlobResize }));\n  };\n\n  const handleChange = async (e) => {\n    if (e.target.name === \"images\") {\n      const { fileArray, fileBlobResize, newFile } = await imgResize(\n        e.target.files\n      );\n      setData((value) => ({ ...value, [e.target.name]: fileBlobResize }));\n      setPreviewImg(fileArray);\n    } else {\n      setData((value) => ({ ...value, [e.target.name]: e.target.value }));\n    }\n  };\n\n  const formDataConstructor = (data) => {\n    let formData = new FormData();\n    Object.keys(data).forEach((key) => {\n      if (key === \"images\") {\n        data.images.forEach((e, i) => {\n          console.log(i);\n          formData.append(\"images\", data.images[i]); //hay q hacer un loop para ver el length del arry y agregarlo\n        });\n        //TODO: hacer que pueda subir mas archivo\n        // data.images.forEach((e) => {\n        //   console.log(e);\n        //   console.log(data.images[0]);\n        //   formData.append(\"images\", data.images[e]); //hay q hacer un loop para ver el length del arry y agregarlo\n        // });\n        // formData.append(\"images\", data.images[0]); //hay q hacer un loop para ver el length del arry y agregarlo\n        // formData.append(\"images\", newFile);\n      } else {\n        formData.append(key, data[key]);\n      }\n    });\n    return formData;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(data);\n    const formData = formDataConstructor(data);\n    for (var pair of formData.entries()) {\n      console.log(pair[0] + \", \" + pair[1]);\n    }\n    try {\n      const res = await axios.post(url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      // setData(initialState);\n      setPreviewImg(\"\");\n      console.log(res.data);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return { data, previewImg, handleChange, handleSubmit, handleImgChange };\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx",["291","292","293","294","295","296"],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx",["297"],"\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport VentaTable from \"./components/VentaTable\";\nimport { Button } from \"@material-ui/core\";\n\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport HeaderTable from \"./components/headerTable/HeaderTable\";\n\nfunction roundNum(num) {\n  return Math.round((num + Number.EPSILON) * 100) / 100;\n}\n\nfunction calcSubTotal(items: Lineas[]) {\n  const sub = items\n    .map(({ precio, qty }) => precio.precio * qty)\n    .reduce((sum, i) => sum + i, 0);\n  return sub;\n}\nconst TAX_RATE = 0.07;\nexport default function VentaRecibo() {\n  const usuario_id = useSelector((state: RootState) => state.user.credentials.id)\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n  const { lineas } = recibo.venta;\n  //TODO: maybe change all this useState to a reduceState\n  const [clienteId, setClienteId] = useState()\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [isTax, setIsTax] = useState(true);\n  const [isCredit, setIsCredit] = useState(false);\n\n  const history = useHistory();\n\n  const onClickHandler = () => history.push(\"/show/items\");\n\n  const postReciboHandler = async () => {\n    const cleanLines = lineas.map((item) => {\n      const newLines = {\n        item_id: item.id,\n        qty: item.qty,\n        precio: item.precio.precio,\n      };\n      return newLines;\n    });\n    const ventaObj = {\n      usuario_id,\n      empresa_cliente_id: clienteId,\n      sub_total: subTotal,\n      tax,\n      total,\n      credito: isCredit,\n      lineas: cleanLines,\n    };\n    console.log(ventaObj);\n    const res = await axios.post(\"/recibos/venta/\", ventaObj);\n    console.log(res);\n  };\n\n  useEffect(() => {\n    //FIX: check why it render 3 time on modQty click\n    setSubTotal(roundNum(calcSubTotal(lineas)));\n    setTax(roundNum(TAX_RATE * subTotal));\n    if (isTax) {\n      setTax(roundNum(TAX_RATE * subTotal));\n      setTotal(roundNum(tax + subTotal));\n    } else {\n      setTax(0);\n      setTotal(roundNum(subTotal));\n    }\n  }, [lineas, subTotal]);\n\n  return (\n    <>\n      <HeaderTable creditState={[isCredit, setIsCredit]} clienteState={[clienteId, setClienteId]} />\n      <VentaTable\n        items={lineas}\n        invoice={[subTotal, tax, total]}\n        TAX_RATE={TAX_RATE}\n        onClickHandler={onClickHandler}\n        taxState={[isTax, setIsTax]}\n      />\n      <Button variant=\"contained\" onClick={postReciboHandler}>\n        agregar recibo\n      </Button>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx",["298"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushLinea } from \"../../../../redux/features/recibo/reciboSlice\";\nimport { RootState } from \"../../../../redux/rootReducer\";\n\nexport default function AddBtn({ obj, reciboTipo, children }) {\n  const recibo = useSelector((state: RootState) => state.recibo);\n  const dispatch = useDispatch();\n  return (\n    <Button\n      onClick={() => {\n        const { lineas } = recibo[reciboTipo];\n        const newLinea = { ...obj };\n        newLinea.tipo = reciboTipo;\n        newLinea.qty = 1;\n        dispatch(pushLinea(newLinea));\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx",["299"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Modal from \"./Modal\";\n\nexport default function SelectsOptions({\n  className,\n  onChange,\n  name,\n  url,\n  form,\n}) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  let menuItemToShow = [];\n  switch (url) {\n    case \"categorias\":\n    case \"proveedores\":\n      menuItemToShow.push(\"nombre\");\n      break;\n    case \"items\":\n      menuItemToShow.push(\"marca\");\n      menuItemToShow.push(\"modelo\");\n      break;\n    case \"usuarios/roles\":\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"lugares\":\n      menuItemToShow.push(\"direccion\");\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"clientes\":\n      menuItemToShow.push(\"nombre\");\n      menuItemToShow.push(\"direccion\");\n      break;\n  }\n\n  console.log(name, url, data);\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {menuItemToShow.length > 1\n        ? `${data[menuItemToShow[0]]}, ${data[menuItemToShow[1]]}`\n        : `${data[menuItemToShow[0]]}`}\n    </MenuItem>\n  ));\n\n  const name_id = `${name}_id`;\n\n  return (\n    <Grid item key={`${name}-select`}>\n      <InputLabel id={name_id}>{name}</InputLabel>\n      <Select\n        className={className}\n        onChange={onChange}\n        labelId={name_id}\n        id={name_id}\n        name={name_id}\n        value={form[name_id]}\n        fullWidth\n      >\n        {dataMenuItem}\n        <MenuItem key={`add_${name}`} onClick={() => setOpenModal(true)}>\n          agregar otra {name}\n        </MenuItem>\n      </Select>\n      <Modal state={[openModal, setOpenModal]} fetch={fetchData} url={url} />\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx",["300","301"],"import {\n  DialogTitle,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport useForm from \"../../../utils/hooks/useForm\";\n\nexport default function Modal({ state, url, fetch }) {\n  console.log(\"url modal: \", url);\n  let [openModal, setOpenModal] = state;\n\n  const initialState = {\n    lugares: {\n      direccion: \"\",\n      tipo: \"\",\n    },\n    categorias: { nombre: \"\" },\n    proveedores: {\n      nombre: \"\",\n      direccion: \"\",\n      telefono: \"\",\n    },\n    \"usuarios/roles\": {\n      tipo: \"\",\n    },\n    clientes: {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n  };\n\n  const textFieldLabel = Object.keys(initialState[url]);\n\n  const {\n    data,\n    loading,\n    handleChange,\n    handleSubmit,\n    handleSubmitPromise,\n  } = useForm(initialState[url], `/${url}`);\n\n  const renderTextField = textFieldLabel.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  const handleClick = async (e) => {\n    await handleSubmitPromise(e);\n    fetch();\n    setOpenModal(false);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={openModal}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <DialogContent>{renderTextField}</DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          aceptar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx",["302"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function ImagesUpload({ onChange }) {\n  //TODO: boton agregar segundo imagen\n  return (\n    <>\n      <input\n        name=\"images\"\n        accept=\"image/*\"\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={onChange}\n      />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx",["303","304","305"],"import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDispatch } from \"react-redux\";\nimport { deleteLinea } from \"../../../../../../redux/features/recibo/reciboSlice\";\n\nimport ModQty from '../../../components/ModQty'\nimport SelectLugar from \"../SelectLugar\";\n\n\nfunction OrderTable({ items, onClickHandler, destinoId, onSelectHandler }) {\n\n  const showRows = items.map((row, idx) => (\n    <TableRow key={row.id}>\n      <TableCell align=\"left\">\n        {/* <DelRow item_id={row.id} /> */}\n        {/* {row.qty} */}\n        <ModQty row={row} reciboTipo=\"transferencia\" idx={idx} />\n      </TableCell>\n      <TableCell align=\"left\">{`${row.marca} ${row.modelo} ${row.color} ${row.descripcion} `}</TableCell>\n      <TableCell align=\"center\">\n        {row.lugar.direccion}, {row.lugar.tipo}\n      </TableCell>\n      <TableCell align=\"center\">\n\n        <SelectLugar\n          destinoId={destinoId}\n          onChange={onSelectHandler}\n          name=\"lugar\"\n          currLugarId={row.lugar.id}\n        />\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer component={Paper}>\n      <Table style={{ minWidth: 425 }} padding=\"default\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Qty</TableCell>\n            <TableCell align=\"center\">Descripcion</TableCell>\n            <TableCell align=\"center\">Origen</TableCell>\n            <TableCell align=\"center\">Destino</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showRows}\n          <TableRow>\n            <IconButton size=\"small\" onClick={onClickHandler}>\n              <AddBoxIcon />\n            </IconButton>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default OrderTable;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx",["306"],"import { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport useFetchData from \"../../../../../utils/hooks/useFetchData\";\n\nexport default function SelectLugar({ destinoId, name, onChange, currLugarId }) {\n  const history = useHistory();\n  const { data } = useFetchData(\"lugares\");\n  const dataFiltered = data.filter(data => data.id !== currLugarId)\n  const dataMenuItem = dataFiltered.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {`${data.direccion}, ${data.tipo}`}\n    </MenuItem>\n  ));\n\n  return (\n    <form>\n      <InputLabel>Destino</InputLabel>\n      <Select value={destinoId} onChange={onChange}>\n        {dataMenuItem}{\" \"}\n        <MenuItem\n          key={`add_${name}`}\n          onClick={() => history.push(`/add/${name}`)}\n        >\n          agregar otro {name}\n        </MenuItem>\n      </Select>\n    </form>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx",["307"],"import { TextField, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteLinea,\n  modQty,\n} from \"../../../../redux/features/recibo/reciboSlice\";\n\nexport default function ModQty({ row, reciboTipo, idx }) {\n  const dispatch = useDispatch();\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n\n  const DelRow = ({ reciboTipo }) => {\n    const handleClick = () => {\n      const tipoAndId = { tipo: reciboTipo, item_id: row.id };\n      dispatch(deleteLinea(tipoAndId));\n    };\n    return (\n      <IconButton size=\"small\" onClick={handleClick}>\n        <DeleteIcon />\n      </IconButton>\n    );\n  };\n\n  const handleArrowClick = (num) => {\n    const payload = {\n      idx,\n      tipo: reciboTipo,\n      qty: row.qty + num,\n    };\n    if (payload.qty < 1) payload.qty = 1\n    dispatch(modQty(payload));\n  };\n\n  const onChangeHandle = e => {\n    const payload = {\n      idx,\n      tipo: reciboTipo,\n      qty: e.target.value,\n    };\n    dispatch(modQty(payload));\n\n  }\n\n  return (\n    <>\n      <DelRow reciboTipo={reciboTipo} />\n      <TextField style={{ width: 30 }} value={row.qty} onChange={onChangeHandle} />\n      <IconButton size=\"small\" onClick={() => handleArrowClick(1)}>\n        <KeyboardArrowUpIcon />\n      </IconButton>\n      <IconButton size=\"small\" onClick={() => handleArrowClick(-1)}>\n        <KeyboardArrowDownIcon />\n      </IconButton>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx",["308"],"import { useState } from \"react\";\nimport SelectsOptions from \"../../../components/SelectsOptions\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addClienteId } from \"../../../../../redux/features/recibo/reciboSlice\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { useStyle } from \"../../../useStyle\";\n\nexport default function HeaderTable({ creditState, clienteState }) {\n  const classes = useStyle();\n  const [isCredit, setIsCredit] = creditState;\n  const [clientId, setClientId] = clienteState;\n  const dispatch = useDispatch();\n\n  const onChangeHandler = (e) => {\n    console.log(e.target.value);\n    setClientId(e.target.value);\n    dispatch(addClienteId(e.target.value));\n  };\n  return (\n    <Paper>\n      <SelectsOptions\n        className={classes.selects}\n        onChange={onChangeHandler}\n        name=\"cliente\"\n        url={\"clientes\"}\n        value={clientId}\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isCredit}\n            onChange={(e) => setIsCredit(!isCredit)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Credito\"\n      />\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx",["309","310","311","312","313","314","315"],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts",[],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":4,"column":10,"nodeType":"322","messageId":"323","endLine":4,"endColumn":21},{"ruleId":"320","severity":1,"message":"324","line":5,"column":18,"nodeType":"322","messageId":"323","endLine":5,"endColumn":25},{"ruleId":"325","severity":1,"message":"326","line":48,"column":54,"nodeType":"327","messageId":"328","endLine":48,"endColumn":56},{"ruleId":"320","severity":1,"message":"329","line":2,"column":69,"nodeType":"322","messageId":"323","endLine":2,"endColumn":73},{"ruleId":"320","severity":1,"message":"330","line":26,"column":19,"nodeType":"322","messageId":"323","endLine":26,"endColumn":26},{"ruleId":"320","severity":1,"message":"329","line":2,"column":69,"nodeType":"322","messageId":"323","endLine":2,"endColumn":73},{"ruleId":"320","severity":1,"message":"330","line":26,"column":17,"nodeType":"322","messageId":"323","endLine":26,"endColumn":24},{"ruleId":"331","severity":1,"message":"332","line":25,"column":6,"nodeType":"333","endLine":25,"endColumn":11,"suggestions":"334"},{"ruleId":"320","severity":1,"message":"335","line":10,"column":3,"nodeType":"322","messageId":"323","endLine":10,"endColumn":8},{"ruleId":"320","severity":1,"message":"329","line":10,"column":3,"nodeType":"322","messageId":"323","endLine":10,"endColumn":7},{"ruleId":"320","severity":1,"message":"336","line":1,"column":8,"nodeType":"322","messageId":"323","endLine":1,"endColumn":22},{"ruleId":"320","severity":1,"message":"329","line":11,"column":3,"nodeType":"322","messageId":"323","endLine":11,"endColumn":7},{"ruleId":"320","severity":1,"message":"337","line":26,"column":9,"nodeType":"322","messageId":"323","endLine":26,"endColumn":16},{"ruleId":"320","severity":1,"message":"329","line":11,"column":3,"nodeType":"322","messageId":"323","endLine":11,"endColumn":7},{"ruleId":"320","severity":1,"message":"338","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":30},{"ruleId":"320","severity":1,"message":"339","line":7,"column":3,"nodeType":"322","messageId":"323","endLine":7,"endColumn":12},{"ruleId":"320","severity":1,"message":"340","line":50,"column":5,"nodeType":"322","messageId":"323","endLine":50,"endColumn":15},{"ruleId":"320","severity":1,"message":"341","line":58,"column":29,"nodeType":"322","messageId":"323","endLine":58,"endColumn":36},{"ruleId":"320","severity":1,"message":"341","line":64,"column":42,"nodeType":"322","messageId":"323","endLine":64,"endColumn":49},{"ruleId":"320","severity":1,"message":"342","line":1,"column":20,"nodeType":"322","messageId":"323","endLine":1,"endColumn":29},{"ruleId":"320","severity":1,"message":"343","line":2,"column":10,"nodeType":"322","messageId":"323","endLine":2,"endColumn":20},{"ruleId":"320","severity":1,"message":"344","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":13},{"ruleId":"320","severity":1,"message":"345","line":6,"column":10,"nodeType":"322","messageId":"323","endLine":6,"endColumn":22},{"ruleId":"320","severity":1,"message":"346","line":6,"column":24,"nodeType":"322","messageId":"323","endLine":6,"endColumn":32},{"ruleId":"320","severity":1,"message":"347","line":15,"column":9,"nodeType":"322","messageId":"323","endLine":15,"endColumn":19},{"ruleId":"331","severity":1,"message":"348","line":75,"column":6,"nodeType":"333","endLine":75,"endColumn":24,"suggestions":"349"},{"ruleId":"320","severity":1,"message":"350","line":13,"column":17,"nodeType":"322","messageId":"323","endLine":13,"endColumn":23},{"ruleId":"331","severity":1,"message":"351","line":26,"column":6,"nodeType":"333","endLine":26,"endColumn":8,"suggestions":"352"},{"ruleId":"320","severity":1,"message":"353","line":44,"column":5,"nodeType":"322","messageId":"323","endLine":44,"endColumn":12},{"ruleId":"320","severity":1,"message":"354","line":46,"column":5,"nodeType":"322","messageId":"323","endLine":46,"endColumn":17},{"ruleId":"320","severity":1,"message":"355","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":14},{"ruleId":"320","severity":1,"message":"356","line":10,"column":8,"nodeType":"322","messageId":"323","endLine":10,"endColumn":18},{"ruleId":"320","severity":1,"message":"357","line":12,"column":10,"nodeType":"322","messageId":"323","endLine":12,"endColumn":21},{"ruleId":"320","severity":1,"message":"358","line":13,"column":10,"nodeType":"322","messageId":"323","endLine":13,"endColumn":21},{"ruleId":"320","severity":1,"message":"359","line":1,"column":10,"nodeType":"322","messageId":"323","endLine":1,"endColumn":21},{"ruleId":"320","severity":1,"message":"360","line":15,"column":9,"nodeType":"322","messageId":"323","endLine":15,"endColumn":24},{"ruleId":"320","severity":1,"message":"361","line":1,"column":10,"nodeType":"322","messageId":"323","endLine":1,"endColumn":18},{"ruleId":"320","severity":1,"message":"362","line":5,"column":10,"nodeType":"322","messageId":"323","endLine":5,"endColumn":26},{"ruleId":"320","severity":1,"message":"363","line":5,"column":28,"nodeType":"322","messageId":"323","endLine":5,"endColumn":36},{"ruleId":"320","severity":1,"message":"364","line":5,"column":46,"nodeType":"322","messageId":"323","endLine":5,"endColumn":54},{"ruleId":"320","severity":1,"message":"365","line":13,"column":10,"nodeType":"322","messageId":"323","endLine":13,"endColumn":19},{"ruleId":"320","severity":1,"message":"366","line":13,"column":21,"nodeType":"322","messageId":"323","endLine":13,"endColumn":33},{"ruleId":"320","severity":1,"message":"367","line":14,"column":10,"nodeType":"322","messageId":"323","endLine":14,"endColumn":24},{"ruleId":"320","severity":1,"message":"368","line":16,"column":9,"nodeType":"322","messageId":"323","endLine":16,"endColumn":34},"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"@typescript-eslint/no-unused-vars","'reciboPaths' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Grid' is defined but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'method'. Either include it or remove the dependency array.","ArrayExpression",["371"],"'Paper' is defined but never used.","'SelectsOptions' is defined but never used.","'classes' is assigned a value but never used.","'UploadAndPreviewImages' is defined but never used.","'Container' is defined but never used.","'previewImg' is assigned a value but never used.","'newFile' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'calcSubTotal' is defined but never used.","'roundNum' is defined but never used.","'usuario_id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isTax' and 'tax'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotal' needs the current value of 'tax'.",["372"],"'lineas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["373"],"'loading' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'useDispatch' is defined but never used.","'deleteLinea' is defined but never used.","'FormControl' is defined but never used.","'recibo' is assigned a value but never used.","'useState' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'MenuItem' is defined but never used.","'itemIdSel' is assigned a value but never used.","'setItemIdSel' is assigned a value but never used.","'itemIdSelected' is assigned a value but never used.","'getLineasVentaYDevolucion' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},"Update the dependencies array to be: [method, url]",{"range":"380","text":"381"},"Update the dependencies array to be: [isTax, lineas, subTotal, tax]",{"range":"382","text":"383"},"Update the dependencies array to be: [fetchData]",{"range":"384","text":"385"},[761,766],"[method, url]",[2206,2224],"[isTax, lineas, subTotal, tax]",[599,601],"[fetchData]"]