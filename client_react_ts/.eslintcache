[{"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx":"1","/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts":"2","/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx":"3","/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js":"4","/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts":"5","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts":"6","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts":"7","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx":"8","/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx":"9","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx":"10","/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx":"11","/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx":"12","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts":"13","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts":"14","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx":"15","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx":"16","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx":"17","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx":"18","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx":"19","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx":"20","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx":"21","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx":"22","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx":"23","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx":"24","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts":"25","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts":"26","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts":"27","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx":"28","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx":"29","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts":"30","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx":"31","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx":"32","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx":"33","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx":"34","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx":"35","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx":"36","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx":"37","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx":"38","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx":"39","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx":"40","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx":"41","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx":"42","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx":"43","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx":"44","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx":"45","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx":"46","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts":"47","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx":"48","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx":"49","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx":"50","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx":"51","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx":"52","/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx":"53","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx":"54","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx":"55","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx":"56","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx":"57","/home/celloo/Projects/inventory_app/client_react_ts/src/components/SearchBar.tsx":"58","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx":"59","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx":"60","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx":"61","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/helper.ts":"62","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowUsuarios.tsx":"63","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/SelectClientes.tsx":"64","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/ComponentToPrint.tsx":"65","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/Modal.tsx":"66","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages/index.ts":"67","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages/helper.ts":"68","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/Card.tsx":"69"},{"size":586,"mtime":1619730698591,"results":"70","hashOfConfig":"71"},{"size":425,"mtime":1615915047592,"results":"72","hashOfConfig":"71"},{"size":2878,"mtime":1621029351429,"results":"73","hashOfConfig":"71"},{"size":99,"mtime":1618011299432,"results":"74","hashOfConfig":"71"},{"size":640,"mtime":1618094533005,"results":"75","hashOfConfig":"71"},{"size":699,"mtime":1616176850171,"results":"76","hashOfConfig":"71"},{"size":2624,"mtime":1616176850019,"results":"77","hashOfConfig":"71"},{"size":2544,"mtime":1618873432285,"results":"78","hashOfConfig":"71"},{"size":1311,"mtime":1615915047584,"results":"79","hashOfConfig":"71"},{"size":1148,"mtime":1618863521886,"results":"80","hashOfConfig":"71"},{"size":541,"mtime":1616176849711,"results":"81","hashOfConfig":"71"},{"size":2340,"mtime":1621027978742,"results":"82","hashOfConfig":"71"},{"size":331,"mtime":1615915047592,"results":"83","hashOfConfig":"71"},{"size":2347,"mtime":1621298101341,"results":"84","hashOfConfig":"71"},{"size":945,"mtime":1618935654755,"results":"85","hashOfConfig":"71"},{"size":978,"mtime":1617839214909,"results":"86","hashOfConfig":"71"},{"size":3216,"mtime":1617743364726,"results":"87","hashOfConfig":"71"},{"size":312,"mtime":1617393041063,"results":"88","hashOfConfig":"71"},{"size":1312,"mtime":1617048618887,"results":"89","hashOfConfig":"71"},{"size":1776,"mtime":1618261295496,"results":"90","hashOfConfig":"71"},{"size":1567,"mtime":1618868230009,"results":"91","hashOfConfig":"71"},{"size":1787,"mtime":1618868250757,"results":"92","hashOfConfig":"71"},{"size":139,"mtime":1617316257026,"results":"93","hashOfConfig":"71"},{"size":3346,"mtime":1621296568096,"results":"94","hashOfConfig":"71"},{"size":475,"mtime":1619222481366,"results":"95","hashOfConfig":"71"},{"size":840,"mtime":1618444053966,"results":"96","hashOfConfig":"71"},{"size":1236,"mtime":1619119846842,"results":"97","hashOfConfig":"71"},{"size":2208,"mtime":1618863852696,"results":"98","hashOfConfig":"71"},{"size":1375,"mtime":1621297621753,"results":"99","hashOfConfig":"71"},{"size":1465,"mtime":1617927107253,"results":"100","hashOfConfig":"71"},{"size":1542,"mtime":1618863711449,"results":"101","hashOfConfig":"71"},{"size":2151,"mtime":1619120847014,"results":"102","hashOfConfig":"71"},{"size":2772,"mtime":1619130581171,"results":"103","hashOfConfig":"71"},{"size":1998,"mtime":1620943757602,"results":"104","hashOfConfig":"71"},{"size":1629,"mtime":1617918091446,"results":"105","hashOfConfig":"71"},{"size":1479,"mtime":1617393041031,"results":"106","hashOfConfig":"71"},{"size":1335,"mtime":1617393041031,"results":"107","hashOfConfig":"71"},{"size":1304,"mtime":1617393041031,"results":"108","hashOfConfig":"71"},{"size":1196,"mtime":1617393041031,"results":"109","hashOfConfig":"71"},{"size":1181,"mtime":1618444053966,"results":"110","hashOfConfig":"71"},{"size":989,"mtime":1618935689784,"results":"111","hashOfConfig":"71"},{"size":5675,"mtime":1621361425990,"results":"112","hashOfConfig":"71"},{"size":3324,"mtime":1618863582291,"results":"113","hashOfConfig":"71"},{"size":869,"mtime":1617393041031,"results":"114","hashOfConfig":"71"},{"size":822,"mtime":1621025239967,"results":"115","hashOfConfig":"71"},{"size":1130,"mtime":1618444053966,"results":"116","hashOfConfig":"71"},{"size":264,"mtime":1618348920849,"results":"117","hashOfConfig":"71"},{"size":353,"mtime":1615915047588,"results":"118","hashOfConfig":"71"},{"size":1963,"mtime":1620943757598,"results":"119","hashOfConfig":"71"},{"size":1559,"mtime":1618863666105,"results":"120","hashOfConfig":"71"},{"size":2254,"mtime":1618445706419,"results":"121","hashOfConfig":"71"},{"size":453,"mtime":1617320585941,"results":"122","hashOfConfig":"71"},{"size":2078,"mtime":1615915047584,"results":"123","hashOfConfig":"71"},{"size":471,"mtime":1615915047588,"results":"124","hashOfConfig":"71"},{"size":1046,"mtime":1615915047588,"results":"125","hashOfConfig":"71"},{"size":602,"mtime":1616271845772,"results":"126","hashOfConfig":"71"},{"size":710,"mtime":1617144646222,"results":"127","hashOfConfig":"71"},{"size":1578,"mtime":1618863437284,"results":"128","hashOfConfig":"71"},{"size":294,"mtime":1618863467901,"results":"129","hashOfConfig":"71"},{"size":548,"mtime":1615915047588,"results":"130","hashOfConfig":"71"},{"size":919,"mtime":1617919904504,"results":"131","hashOfConfig":"71"},{"size":274,"mtime":1618872831251,"results":"132","hashOfConfig":"71"},{"size":1009,"mtime":1618935810890,"results":"133","hashOfConfig":"71"},{"size":1367,"mtime":1619120955821,"results":"134","hashOfConfig":"71"},{"size":6535,"mtime":1620943757594,"results":"135","hashOfConfig":"71"},{"size":1746,"mtime":1619120641712,"results":"136","hashOfConfig":"71"},{"size":1907,"mtime":1619732164275,"results":"137","hashOfConfig":"71"},{"size":2259,"mtime":1619731370344,"results":"138","hashOfConfig":"71"},{"size":2800,"mtime":1621026334825,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"8hdc3h",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"142"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"142"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"142"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"142"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"142"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"142"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"142"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"142"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"142"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"142"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"142"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"142"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"142"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx",[],["301","302"],"/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js",[],["303","304"],"/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts",["305"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//TODO: agregar recibo venta transferencia\nconst initialState: Recibos = {\n  usuario_id: null,\n  venta: {\n    empresa_cliente_id: null,\n    lineas: [],\n  },\n  transferencia: {\n    lineas: [],\n  },\n};\n\ninterface Tipo {\n  tipo: string;\n}\n\nconst reciboSlice = createSlice({\n  name: \"recibos\",\n  initialState,\n  reducers: {\n    //TODO: add change qty reducer\n    addUserId: (state, action) => {\n      state.usuario_id = action.payload;\n    },\n    delUserId: (state) => {\n      state.usuario_id = null;\n    },\n    addClienteId: (state, action) => {\n      console.log(action.payload);\n      const { empresa_cliente_id, reciboTipo } = action.payload;\n      if (reciboTipo === \"venta\") {\n        state.venta.empresa_cliente_id = empresa_cliente_id.id;\n      }\n    },\n    modQty: (state, action) => {\n      console.log(action.payload);\n      const tipoRecibo = action.payload.tipo;\n      let { idx, qty } = action.payload;\n      if (qty < 0) qty = 0;\n      state[tipoRecibo].lineas[idx].qty = qty;\n    },\n    pushLinea: (state, action: PayloadAction<Lineas & Tipo>) => {\n      //TODO: revisar si existe o no el item pusheado, si qty del payload es mayor actualizar la qty\n      const tipoRecibo = action.payload.tipo;\n      const hasId = state[tipoRecibo].lineas.some(\n        (linea) => linea.id === action.payload.id\n      );\n      if (hasId) {\n        state[tipoRecibo].lineas.filter((linea, idx) => {\n          if (linea.id === action.payload.id) {\n            state[tipoRecibo].lineas[idx] = action.payload;\n          }\n        });\n      } else {\n        state[tipoRecibo].lineas.push(action.payload);\n      }\n    },\n    addRecibo: (state, action: PayloadAction<Recibos & Tipo>) => {\n      const tipoRecibo = action.payload.tipo;\n      state[tipoRecibo] = action.payload;\n    },\n    deleteLinea: (state, action: PayloadAction<Tipo & { item_id: number }>) => {\n      const tipoRecibo = action.payload.tipo;\n      console.log(action.payload);\n      const newArr = state[tipoRecibo].lineas.filter(\n        (linea) => linea.id !== action.payload.item_id\n      );\n      state[tipoRecibo].lineas = newArr;\n    },\n  },\n});\n\nexport const {\n  addUserId,\n  delUserId,\n  addClienteId,\n  pushLinea,\n  modQty,\n  addRecibo,\n  deleteLinea,\n} = reciboSlice.actions;\n\nexport default reciboSlice.reducer;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx",["306","307"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n}));\n\nexport default function ShowTransferencias() {\n    const classes = useStyles();\n\n    const url = '/recibos/transferencia'\n    const { data, setData } = useFetchData(url)\n\n    const accordionView = data.map(obj =>\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>N° Recibo: {obj.id}</Typography>\n                <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n                <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Descripcion</TableCell>\n                                <TableCell align=\"center\">Qty</TableCell>\n                                <TableCell align=\"right\">Origen</TableCell>\n                                <TableCell align=\"right\">Destino</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {obj.lineas.map(linea => (\n                                <TableRow key={linea.id}>\n                                    <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                                    <TableCell align=\"left\">\n                                        {linea.qty}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{`${linea.item.lugar.direccion}, ${linea.item.lugar.tipo}`}</TableCell>\n                                    <TableCell align=\"right\">\n                                        {`${linea.destino.direccion}, ${linea.destino.tipo}`}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    )\n\n    return (\n        <>\n            <Typography variant='h3'>Recibos Ventas</Typography>\n            {accordionView}\n        </>\n    )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx",["308","309","310"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\nimport useFormImage from \"../../utils/hooks/useFormImage\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Cliente {\n  nombre: string;\n  telefono: string;\n  direccion: string;\n  email: string;\n  logo_url: string;\n  website_url: string;\n  telefono_2: string;\n}\n\nexport default function AddCliente() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Cliente>(\n    {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n    \"/clientes/addUser\"\n  );\n\n  const clienteDetails = [\n    \"nombre\",\n    \"direccion\",\n    \"telefono\",\n    \"telefono 2\",\n    \"email\",\n    \"website\",\n  ];\n\n  const renderTextField = clienteDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"lg\" fixed>\n      <Typography variant=\"h2\">Agregar Cliente</Typography>\n      {renderTextField}\n      <UploadAndPreviewImages previewImg={previewImg} onChange={handleChange} />\n      {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Agregar\n      </Button>\n      <br></br>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx",["311"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport useForm from \"../../utils/hooks/useForm\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Defectuoso {\n  descripcion: string;\n}\n\nexport default function AddDefectuoso(props: any) {\n  const classes = useStyle();\n  const { data, handleSubmit, handleChange } = useForm<Defectuoso>(\n    {\n      descripcion: \"\",\n    },\n    \"/defectuoso\"\n  );\n  //   const [previewImg, setPreviewImg] = useState(\"\");\n\n  const defectuosoDetails = [\"descripcion\"];\n\n  const renderTextField = defectuosoDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Defectuoso</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          onChange={handleChange}\n          name=\"items\"\n          url=\"items\"\n          value={data}\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx",["312"],"import useFormImage from \"../../utils/hooks/useFormImage\";\nimport SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\nexport default function AddUsuario() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Usuario>(\n    {\n      nombre: \"\",\n      password: \"\",\n      telefono: \"\",\n      rol_id: 1,\n    },\n    \"/usuarios/addUser\"\n  );\n\n  const usuarioDetails = [\n    \"nombre\",\n    \"password\",\n    \"telefono\",\n    \"email\",\n    \"telefono_2\",\n  ];\n\n  const renderTextField = usuarioDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Usuario</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          onChange={handleChange}\n          name=\"rol\"\n          url=\"usuarios/roles\"\n          value={data}\n        />\n        <UploadAndPreviewImages\n          previewImg={previewImg}\n          onChange={handleChange}\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx",["313"],"import { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport VentaTable from \"./components/VentaTable\";\nimport { Button } from \"@material-ui/core\";\nimport { roundNum, calcSubTotal } from \"../utils\";\nimport ReactToPrint from 'react-to-print'\nimport ComponentToPrint from '../../components/ComponentToPrint'\nimport { useSnackbar } from \"notistack\";\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"./components/Header\";\n\nconst TAX_RATE = 0.07;\nexport default function VentaRecibo() {\n  const usuario_id = useSelector(\n    (state: RootState) => state.user.credentials.id\n  );\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n  const { lineas } = recibo.venta;\n  //TODO: maybe change all this useState to a reduceState\n  const [client, setClient] = useState<any>();\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [isTax, setIsTax] = useState(true);\n  const [isCredit, setIsCredit] = useState(false);\n\n  const history = useHistory();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const componentRef = useRef()\n\n  const onClickHandler = () => history.push(\"/show/items\");\n\n  const postReciboHandler = async () => {\n    const cleanLines = lineas.map((item) => {\n      const newLines = {\n        item_id: item.id,\n        qty: item.qty,\n        precio: item.precio.precio,\n      };\n      return newLines;\n    });\n    const ventaObj = {\n      usuario_id,\n      empresa_cliente_id: client.id,\n      sub_total: subTotal,\n      tax,\n      total,\n      credito: isCredit,\n      lineas: cleanLines,\n    };\n    console.log(ventaObj);\n    try {\n      const res = await axios.post(\"/recibos/venta/\", ventaObj);\n      enqueueSnackbar(\"data guardado\", {\n        variant: \"success\",\n      });\n      console.log(res);\n    } catch (err) {\n      console.log(err.response);\n      enqueueSnackbar(\"error \", {\n        variant: \"error\",\n      });\n\n    }\n  };\n\n  useEffect(() => {\n    //FIX: check why it render 3 time on modQty click\n    setSubTotal(roundNum(calcSubTotal(lineas)));\n    setTax(roundNum(TAX_RATE * subTotal));\n    if (isTax) {\n      setTax(roundNum(TAX_RATE * subTotal));\n      setTotal(roundNum(tax + subTotal));\n    } else {\n      setTax(0);\n      setTotal(roundNum(subTotal));\n    }\n  }, [lineas, subTotal, total, isTax, tax]);\n  //TODO debieria pasar set client data completo en ves de id solo para ser usado en print\n  return (\n    <>\n      <Header\n        creditState={[isCredit, setIsCredit]}\n        clienteState={[client, setClient]}\n      />\n      <VentaTable\n        items={lineas}\n        invoice={[subTotal, tax, total]}\n        TAX_RATE={TAX_RATE}\n        onClickHandler={onClickHandler}\n        taxState={[isTax, setIsTax]}\n      />\n      <Button variant=\"contained\" onClick={postReciboHandler}>\n        agregar recibo\n      </Button>\n      <ReactToPrint\n        trigger={() => <button>imprimir</button>}\n        content={() => componentRef.current}\n      />\n      <ComponentToPrint ref={componentRef} lineas={lineas} client={client}\n\n        subTotal={subTotal} tax={tax} total={total}\n        TAX_RATE={TAX_RATE} isCredit={isCredit}\n      />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts",["314"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchData(url, method = \"get\") {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState(\"\");\n  console.log(error);\n  console.log(\"fetch api\", url);\n  useEffect(() => {\n    console.log(\"use effect fetchDatafrom api\");\n    const fetchDataFromApi = async () => {\n      try {\n        setIsFetching(true);\n        const res = await axios[method](url);\n        setData(res.data);\n        console.log(\"useFetchData res.data:  \", res.data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setIsFetching(false);\n      }\n    };\n    fetchDataFromApi();\n  }, [url]);\n  console.log(error);\n  return { data, setData, isFetching, error };\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx",["315","316","317"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DevolucionTable from \"./components/DevolucionTable\";\nimport { Button } from \"@material-ui/core\";\n\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"./components/Header\";\nexport interface VentaYDevoluciones {\n  ventas?: VentasEntity[] | null;\n  devoluciones?: null[] | null;\n}\nexport interface VentasEntity {\n  id: number;\n  venta_id: number;\n  item_id: number;\n  qty: number;\n  precio: number;\n  tax?: null;\n  total?: null;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: null;\n  item: Item;\n}\nexport interface Item {\n  id: number;\n  marca: string;\n  modelo: string;\n  color: string;\n  stock: number;\n  descripcion: string;\n  barcode: string;\n  sku: string;\n  precio_id: number;\n  categoria_id: number;\n  categoria_2_id?: null;\n  lugar_id: number;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: null;\n}\n\nexport default function Devolucion() {\n  //TODO: maybe change all this useState to a reduceState\n  const [clientId, setClientId] = useState<number>();\n  // TODO: select item id deb ser un item entero y no un id para ser usado en la tabla\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [lineas, setLineas] = useState<VentaYDevoluciones>();\n  const [hasLineas, setHasLineas] = useState(false);\n\n  const getLineasVentaYDevolucion = async () => {\n    try {\n      const res = await axios.get(`/recibos/devolucion/clientId/${clientId}`);\n      console.log(res.data);\n      setLineas(res.data);\n      setHasLineas(true);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    if (clientId) {\n      getLineasVentaYDevolucion();\n    }\n    console.log(\"useEffect lineas\", lineas);\n  }, [clientId]);\n\n  return (\n    <>\n      <Header\n        useStates={[\n          clientId,\n          setClientId,\n          selectedItems,\n          setSelectedItems,\n          hasLineas,\n          setHasLineas,\n          lineas,\n          setLineas,\n        ]}\n      />\n      <DevolucionTable items={selectedItems} />\n      <Button variant=\"contained\">agregar recibo</Button>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx",["318","319"],"import { useState } from \"react\";\nimport SelectsOptions from \"../../../components/SelectsOptions\";\nimport SelectClientes from '../../components/SelectClientes'\nimport { Paper } from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addClienteId } from \"../../../../../redux/features/recibo/reciboSlice\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { useStyle } from \"../../../useStyle\";\n\nexport default function HeaderTable({ creditState, clienteState }) {\n  const classes = useStyle();\n  const [isCredit, setIsCredit] = creditState;\n  const [client, setClient] = clienteState;\n  const dispatch = useDispatch();\n\n  const onChangeHandler = (e) => {\n    console.log(e.target.value);\n    setClient(e.target.value);\n    const header = {\n      empresa_cliente_id: e.target.value,\n      tipo: 'venta'\n    }\n    dispatch(addClienteId(header));\n  };\n  return (\n    <Paper>\n      <SelectClientes\n        className={classes.selects}\n        onChange={onChangeHandler}\n        url={\"clientes\"}\n        value={client}\n        setClient={setClient}\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isCredit}\n            onChange={(e) => setIsCredit(!isCredit)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Credito\"\n      />\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx",["320","321"],"import SelectsOptions from \"../../../components/SelectsOptions\";\nimport SelectClientes from '../../components/SelectClientes'\nimport { Paper } from \"@material-ui/core\";\n\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyle } from \"../../../useStyle\";\n\nimport { VentaYDevoluciones } from \"../\";\ninterface UseStates {\n  clientId: any;\n  setClientId: any;\n  selectedItemId: any;\n  setSelectedItemId: any;\n  hasLineas: any;\n  setHasLineas: any;\n  lineas: VentaYDevoluciones;\n  setLineas: any;\n}\n\nexport default function Header({ useStates }) {\n  const classes = useStyle();\n  const [\n    client,\n    setClient,\n    selectedItems,\n    setSelectedItems,\n    hasLineas,\n    lineas,\n    setLineas,\n  ] = useStates;\n\n  return (\n    <Paper>\n      <SelectClientes\n        className={classes.selects}\n        onChange={(e) => {\n          setClient(e.target.value);\n        }}\n        url={\"clientes\"}\n        value={client}\n        setClient={setClient}\n      />\n\n      {hasLineas ? (\n        <>\n          <InputLabel id={\"lineas\"}>Item a devolver</InputLabel>\n          <Select\n            onChange={(e) => {\n              const { value } = e.target;\n              const item = value[0];\n              const lineaId = value[1];\n              setSelectedItems(selectedItems.concat(item));\n\n              const newVentas = lineas.ventas.filter(\n                (lineaVenta) => lineaVenta.id !== lineaId\n              );\n\n              setLineas((prevState) => {\n                return { ...prevState, ventas: newVentas };\n              });\n              // if (lineas.ventas.length === 1) setHasLineas(false);\n            }}\n            labelId={\"lineas\"}\n            id={\"lineas\"}\n            name={\"lineas\"}\n            fullWidth\n          >\n            {lineas?.ventas?.map((linea) => (\n              <MenuItem\n                value={[linea.item, linea.id]}\n              >{`${linea.item.marca} ${linea.item.modelo} ${linea.item.descripcion}, recibo N° ${linea.venta_id}`}</MenuItem>\n            ))}\n          </Select>\n        </>\n      ) : (\n        \"aqui aparece un select item a devolver\"\n      )}\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx",["322"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Modal from \"./Modal\";\n\nexport default function SelectsOptions({\n  className,\n  onChange,\n  name,\n  url,\n  value,\n}) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  let menuItemToShow = [];\n\n  switch (url) {\n    case \"categorias\":\n    case \"proveedores\":\n      menuItemToShow.push(\"nombre\");\n      break;\n    case \"items\":\n      menuItemToShow.push(\"marca\");\n      menuItemToShow.push(\"modelo\");\n      break;\n    case \"usuarios/roles\":\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"lugares\":\n      menuItemToShow.push(\"direccion\");\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"clientes\":\n      menuItemToShow.push(\"nombre\");\n      menuItemToShow.push(\"direccion\");\n      break;\n  }\n\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {menuItemToShow.length > 1\n        ? `${data[menuItemToShow[0]]}, ${data[menuItemToShow[1]]}`\n        : `${data[menuItemToShow[0]]}`}\n    </MenuItem>\n  ));\n\n  const name_id = `${name}_id`;\n\n  return (\n    <Grid item key={`${name}-select`}>\n      <InputLabel id={name_id}>{name}</InputLabel>\n      <Select\n        className={className}\n        onChange={onChange}\n        labelId={name_id}\n        id={name_id}\n        name={name_id}\n        value={value[name_id]}\n        fullWidth\n      >\n        {dataMenuItem}\n        <MenuItem key={`add_${name}`} onClick={() => setOpenModal(true)}>\n          agregar otra {name}\n        </MenuItem>\n      </Select>\n      <Modal state={[openModal, setOpenModal]} fetch={fetchData} url={url} />\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx",["323","324"],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx",["325"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n}));\n\nexport default function ShowVentas() {\n  const classes = useStyles();\n\n  const url = '/recibos/venta'\n  const { data, setData } = useFetchData(url)\n\n  const accordionView = data.map(obj =>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography >N° Recibo: {obj.id}</Typography>\n        <Typography className={classes.heading}>Ciente: {obj.cliente.nombre}</Typography>\n        <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n        <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Qty</TableCell>\n                <TableCell align=\"center\">Descripcion</TableCell>\n                <TableCell align=\"right\">Precio</TableCell>\n                <TableCell align=\"right\">Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {obj.lineas.map(linea => (\n                <TableRow key={linea.id}>\n                  <TableCell align=\"left\">\n                    {linea.qty}\n                  </TableCell>\n                  <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                  <TableCell align=\"right\">{linea.precio.toFixed(2)}</TableCell>\n                  <TableCell align=\"right\">\n                    {(linea.precio * linea.qty).toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell rowSpan={3} />\n                <TableCell colSpan={2}>Subtotal</TableCell>\n                <TableCell align=\"right\">{obj.sub_total}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={1}>Tax</TableCell>\n                <TableCell align=\"right\">{`${(obj.tax * 100).toFixed(0)} %`}</TableCell>\n                <TableCell align=\"right\">{obj.tax}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2}>Total</TableCell>\n                <TableCell align=\"right\">{obj.total}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n    </Accordion>\n  )\n\n  return (\n    <>\n      <Typography variant='h3'>Recibos Ventas</Typography>\n      {accordionView}\n    </>\n  )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx",["326","327"],"import {\n  DialogTitle,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport useForm from \"../../../utils/hooks/useForm\";\n\nexport default function Modal({ state, url, fetch }) {\n  let [openModal, setOpenModal] = state;\n\n  const initialState = {\n    lugares: {\n      direccion: \"\",\n      tipo: \"\",\n    },\n    categorias: { nombre: \"\" },\n    proveedores: {\n      nombre: \"\",\n      direccion: \"\",\n      telefono: \"\",\n    },\n    \"usuarios/roles\": {\n      tipo: \"\",\n    },\n    clientes: {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n  };\n\n  const textFieldLabel = Object.keys(initialState[url]);\n\n  const {\n    data,\n    loading,\n    handleChange,\n    handleSubmit,\n    handleSubmitPromise,\n  } = useForm(initialState[url], `/${url}`);\n\n  const renderTextField = textFieldLabel.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  const handleClick = async (e) => {\n    await handleSubmitPromise(e);\n    fetch();\n    setOpenModal(false);\n  };\n  const checkValues = Object.values(data).every(e => !e)\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={openModal}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <DialogContent>{renderTextField}</DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n          disabled={checkValues}\n        >\n          aceptar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx",["328","329","330"],"import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDispatch } from \"react-redux\";\nimport { deleteLinea } from \"../../../../../../redux/features/recibo/reciboSlice\";\n\nimport ModQty from '../../../components/ModQty'\nimport SelectLugar from \"../SelectLugar\";\n\n\nfunction OrderTable({ items, onClickHandler, destinoId, onSelectHandler }) {\n\n  const showRows = items.map((row, idx) => (\n    <TableRow key={row.id}>\n      <TableCell align=\"left\">\n        {/* <DelRow item_id={row.id} /> */}\n        {/* {row.qty} */}\n        <ModQty item={row} reciboTipo=\"transferencia\" idx={idx} />\n      </TableCell>\n      <TableCell align=\"left\">{`${row.marca} ${row.modelo} ${row.color} ${row.descripcion} `}</TableCell>\n      <TableCell align=\"center\">\n        {row.lugar.direccion}, {row.lugar.tipo}\n      </TableCell>\n      <TableCell align=\"center\">\n\n        <SelectLugar\n          destinoId={destinoId}\n          onChange={onSelectHandler}\n          name=\"lugar\"\n          currLugarId={row.lugar.id}\n        />\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer component={Paper}>\n      <Table style={{ minWidth: 425 }} padding=\"default\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Qty</TableCell>\n            <TableCell align=\"center\">Descripcion</TableCell>\n            <TableCell align=\"center\">Origen</TableCell>\n            <TableCell align=\"center\">Destino</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showRows}\n          <TableRow>\n            <IconButton size=\"small\" onClick={onClickHandler}>\n              <AddBoxIcon />\n            </IconButton>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default OrderTable;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx",["331"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushLinea } from \"../../../../redux/features/recibo/reciboSlice\";\nimport { RootState } from \"../../../../redux/rootReducer\";\n\nexport default function AddBtn({ obj, reciboTipo, children }) {\n  const recibo = useSelector((state: RootState) => state.recibo);\n  const dispatch = useDispatch();\n  return (\n    <Button\n      onClick={() => {\n        const { lineas } = recibo[reciboTipo];\n        const newLinea = { ...obj };\n        newLinea.tipo = reciboTipo;\n        newLinea.qty = 1;\n        dispatch(pushLinea(newLinea));\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/SearchBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx",["332"],"import { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport useFetchData from \"../../../../../utils/hooks/useFetchData\";\n\nexport default function SelectLugar({ destinoId, name, onChange, currLugarId }) {\n  const history = useHistory();\n  const { data } = useFetchData(\"lugares\");\n  const dataFiltered = data.filter(data => data.id !== currLugarId)\n  const dataMenuItem = dataFiltered.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {`${data.direccion}, ${data.tipo}`}\n    </MenuItem>\n  ));\n\n  return (\n    <form>\n      <InputLabel>Destino</InputLabel>\n      <Select value={destinoId} onChange={onChange}>\n        {dataMenuItem}{\" \"}\n        <MenuItem\n          key={`add_${name}`}\n          onClick={() => history.push(`/add/${name}`)}\n        >\n          agregar otro {name}\n        </MenuItem>\n      </Select>\n    </form>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/helper.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowUsuarios.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/SelectClientes.tsx",["333"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Modal from \"./Modal\";\n\nexport default function SelectsClientes({\n  className,\n  onChange,\n  url,\n  value,\n  setClient,\n}) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        // setClient(res.data[])\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data}>\n      {data.nombre}\n    </MenuItem>\n  ));\n  console.log(value)\n  return (\n    <Grid item key={`cliente-grid`}>\n      <InputLabel id={'cliente-input'}>Clientes</InputLabel>\n      <Select\n        className={className}\n        onChange={onChange}\n        labelId={'cliente'}\n        id={'clienteSelect'}\n        name={'cliente'}\n        value={value?.id}\n        fullWidth\n      >\n        {dataMenuItem}\n        <MenuItem key={`add_cliente`} onClick={() => setOpenModal(true)}>\n          agregar cliente\n        </MenuItem>\n      </Select>\n      <Modal state={[openModal, setOpenModal]} fetch={fetchData} url={url} />\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/ComponentToPrint.tsx",["334","335","336","337"],"import React from 'react'\nimport dayjs from 'dayjs'\n\nimport './ComponentToPrint.css'\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport Button from \"@material-ui/core/Button\";\nimport { Box } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport const useStyle = makeStyles((theme) => ({\n    centerButtonDialog: {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        padding: \"10px\"\n    },\n}));\n\nexport default class ComponentToPrint extends React.Component<any> {\n    render() {\n        console.log(\"ComponentToPrint render: \", this.props);\n        const { lineas, client, TAX_RATE, subTotal, tax, total, isCredit } = this.props\n        return (\n            <Box display='none' displayPrint='block'>\n                <header>\n                    <h1>Recibo</h1>\n                    <div className=\"headerAddress\">\n                        <address>\n                            <p>Cliente: {client?.nombre}</p>\n                            <p>Dirrecion: {client?.dirrecion}</p>\n                        </address>\n                        <address>\n                            <p>email</p>\n                            <p>Telefono: {client?.telefono}</p>\n                        </address>\n                        <address>{client?.isCredit ? 'Credito' : 'Contado'}</address>\n                    </div>\n                </header>\n                <article>\n                    <table className=\"meta\">\n                        <tbody>\n                            <tr>\n                                <th>\n                                    <span>Fecha</span>\n                                </th>\n                                <td>\n                                    <span>{dayjs().format('DD-MMM-YYYY')}</span>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <table className=\"inventory\">\n                        <thead>\n                            <tr>\n                                <th>\n                                    <span>Qty</span>\n                                </th>\n                                <th>\n                                    <span>Descripcion</span>\n                                </th>\n                                <th>\n                                    <span>Precio</span>\n                                </th>\n\n                                <th>\n                                    <span>Total</span>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {lineas.map(linea => (\n                                <tr key={'item_id' + linea?.id}>\n                                    <td>\n                                        <span>{linea?.qty}</span>\n                                    </td>\n                                    <td>\n                                        <span>{linea?.marca} {linea?.modelo} {linea?.descripcion}</span>\n                                    </td>\n                                    <td>\n                                        <span data-prefix>$</span>\n                                        <span>{linea?.precio?.precio?.toFixed(2)}</span>\n                                    </td>\n                                    <td>\n                                        <span data-prefix>$</span>\n                                        <span>{(linea?.precio?.precio * linea?.qty).toFixed(2)}</span>\n                                    </td>\n                                </tr>\n\n                            ))}\n                        </tbody>\n                    </table>\n                    {/* <div className=\"center\">\n                        <label className=\"label\">\n                            <input\n                                className=\"inputLabel\"\n                                type=\"checkbox\"\n                                checked={true}\n                                readOnly\n                            />\n              Bateria\n              <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"label\">\n                            <input\n                                className=\"inputLabel\"\n                                type=\"checkbox\"\n                                checked={true}\n                                readOnly\n                            />\n              Tapa\n              <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"label\">\n                            <input\n                                className=\"inputLabel\"\n                                type=\"checkbox\"\n                                checked={true}\n                                readOnly\n                            />\n              simCard\n              <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"label\">\n                            <input\n                                className=\"inputLabel\"\n                                type=\"checkbox\"\n                                checked={true}\n                                readOnly\n                            />\n              Memoria\n              <span className=\"checkmark\"></span>\n                        </label>\n                    </div> */}\n                    <table className=\"balance\">\n                        <tr>\n                            <th><span >SubTotal</span></th>\n                            <td><span data-prefix>$</span><span>{subTotal.toFixed(2)}</span></td>\n                        </tr>\n                        <tr>\n                            <th><span >Tax</span></th>\n                            <td><span data-prefix>$</span><span >{tax.toFixed(2)}</span></td>\n                        </tr>\n                        <tr>\n                            <th><span >Total</span></th>\n                            <td><span data-prefix>$</span><span>{total.toFixed(2)}</span></td>\n                        </tr>\n                    </table>\n                </article>\n                <aside>\n                    <h1>\n                        <span>Notas Adicionales</span>\n                    </h1>\n                    <div>\n                        <p>despues de 30 dias el equipo es propiedad del comerciante</p>\n                    </div>\n                </aside>\n\n            </Box>\n        );\n    }\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/Modal.tsx",["338","339","340"],"import {\n  DialogTitle,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport useForm from \"../../../../utils/hooks/useForm\";\n\nexport default function Modal({ state, url, fetch }) {\n  let [openModal, setOpenModal] = state;\n\n  const initialState = {\n    nombre: \"\",\n    telefono: \"\",\n    direccion: \"\",\n    email: \"\",\n    website_url: \"\",\n    telefono_2: \"\",\n  };\n\n  const textFieldLabel = Object.keys(initialState);\n\n  const {\n    data,\n    loading,\n    handleChange,\n    handleSubmit,\n    handleSubmitPromise,\n  } = useForm(initialState, `/${url}`);\n\n  const renderTextField = textFieldLabel.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  const handleClick = async (e) => {\n    await handleSubmitPromise(e);\n    fetch();\n    setOpenModal(false);\n  };\n\n  const campoObligatorio = ['nombre', 'telefono', 'direccion']\n  const checkValues = Object.values(data)\n    .some(e => !e)\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={openModal}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <DialogContent>{renderTextField}</DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n          disabled={checkValues}\n        >\n          aceptar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages/index.ts",["341","342","343","344"],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  dataURIToFile,\n  resizeFile,\n  imgResize,\n  formDataConstructor,\n} from \"./helper\";\n\nexport default function useFormMultipleImages<T>(initialState: T, url: string) {\n  const [data, setData] = useState(initialState);\n  const [previewImg, setPreviewImg] = useState(\"\");\n  const [error, setError] = useState();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleImgChange = async (files) => {\n    const { fileBlobResize } = await imgResize(files);\n    setData((value) => ({ ...value, images: fileBlobResize }));\n  };\n\n  const handleChange = async (e) => {\n    if (e.target.name === \"images\") {\n      const { fileArray, fileBlobResize } = await imgResize(e.target.files);\n      setData((value) => ({ ...value, [e.target.name]: fileBlobResize }));\n      setPreviewImg(fileArray);\n    } else {\n      setData((value) => ({\n        ...value,\n        [e.target.name]: e.target.value,\n      }));\n    }\n  };\n\n  const handleSelectChange = (e) => {\n    setData((value) => ({\n      ...value,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(data);\n    const formData = formDataConstructor(data);\n    try {\n      const res = await axios.post(url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      // setData(initialState);\n      setPreviewImg(\"\");\n      enqueueSnackbar(\"data guardado\", {\n        variant: \"success\",\n      });\n      console.log(res.data);\n    } catch (err) {\n      console.log(err.response);\n      setError(err.response);\n      enqueueSnackbar(\"error\", {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return {\n    data,\n    previewImg,\n    handleChange,\n    handleSelectChange,\n    handleSubmit,\n    handleImgChange,\n  };\n}\n",["345","346"],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages/helper.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/Card.tsx",[],{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":51,"column":54,"nodeType":"353","messageId":"354","endLine":51,"endColumn":56},{"ruleId":"355","severity":1,"message":"356","line":2,"column":69,"nodeType":"357","messageId":"358","endLine":2,"endColumn":73},{"ruleId":"355","severity":1,"message":"359","line":26,"column":19,"nodeType":"357","messageId":"358","endLine":26,"endColumn":26},{"ruleId":"355","severity":1,"message":"360","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":22},{"ruleId":"355","severity":1,"message":"356","line":11,"column":3,"nodeType":"357","messageId":"358","endLine":11,"endColumn":7},{"ruleId":"355","severity":1,"message":"361","line":26,"column":9,"nodeType":"357","messageId":"358","endLine":26,"endColumn":16},{"ruleId":"355","severity":1,"message":"356","line":10,"column":3,"nodeType":"357","messageId":"358","endLine":10,"endColumn":7},{"ruleId":"355","severity":1,"message":"356","line":11,"column":3,"nodeType":"357","messageId":"358","endLine":11,"endColumn":7},{"ruleId":"355","severity":1,"message":"362","line":32,"column":28,"nodeType":"357","messageId":"358","endLine":32,"endColumn":41},{"ruleId":"363","severity":1,"message":"364","line":25,"column":6,"nodeType":"365","endLine":25,"endColumn":11,"suggestions":"366"},{"ruleId":"355","severity":1,"message":"367","line":7,"column":10,"nodeType":"357","messageId":"358","endLine":7,"endColumn":19},{"ruleId":"355","severity":1,"message":"368","line":8,"column":10,"nodeType":"357","messageId":"358","endLine":8,"endColumn":21},{"ruleId":"363","severity":1,"message":"369","line":70,"column":6,"nodeType":"365","endLine":70,"endColumn":16,"suggestions":"370"},{"ruleId":"355","severity":1,"message":"371","line":1,"column":10,"nodeType":"357","messageId":"358","endLine":1,"endColumn":18},{"ruleId":"355","severity":1,"message":"360","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":22},{"ruleId":"355","severity":1,"message":"360","line":1,"column":8,"nodeType":"357","messageId":"358","endLine":1,"endColumn":22},{"ruleId":"355","severity":1,"message":"372","line":13,"column":11,"nodeType":"357","messageId":"358","endLine":13,"endColumn":20},{"ruleId":"363","severity":1,"message":"373","line":28,"column":6,"nodeType":"365","endLine":28,"endColumn":8,"suggestions":"374"},{"ruleId":"355","severity":1,"message":"375","line":2,"column":8,"nodeType":"357","messageId":"358","endLine":2,"endColumn":29},{"ruleId":"355","severity":1,"message":"362","line":83,"column":28,"nodeType":"357","messageId":"358","endLine":83,"endColumn":41},{"ruleId":"355","severity":1,"message":"359","line":26,"column":17,"nodeType":"357","messageId":"358","endLine":26,"endColumn":24},{"ruleId":"355","severity":1,"message":"376","line":43,"column":5,"nodeType":"357","messageId":"358","endLine":43,"endColumn":12},{"ruleId":"355","severity":1,"message":"377","line":45,"column":5,"nodeType":"357","messageId":"358","endLine":45,"endColumn":17},{"ruleId":"355","severity":1,"message":"378","line":10,"column":8,"nodeType":"357","messageId":"358","endLine":10,"endColumn":18},{"ruleId":"355","severity":1,"message":"379","line":12,"column":10,"nodeType":"357","messageId":"358","endLine":12,"endColumn":21},{"ruleId":"355","severity":1,"message":"380","line":13,"column":10,"nodeType":"357","messageId":"358","endLine":13,"endColumn":21},{"ruleId":"355","severity":1,"message":"381","line":13,"column":17,"nodeType":"357","messageId":"358","endLine":13,"endColumn":23},{"ruleId":"355","severity":1,"message":"382","line":1,"column":10,"nodeType":"357","messageId":"358","endLine":1,"endColumn":21},{"ruleId":"363","severity":1,"message":"373","line":29,"column":6,"nodeType":"365","endLine":29,"endColumn":8,"suggestions":"383"},{"ruleId":"355","severity":1,"message":"384","line":5,"column":8,"nodeType":"357","messageId":"358","endLine":5,"endColumn":17},{"ruleId":"355","severity":1,"message":"385","line":6,"column":8,"nodeType":"357","messageId":"358","endLine":6,"endColumn":14},{"ruleId":"355","severity":1,"message":"386","line":22,"column":33,"nodeType":"357","messageId":"358","endLine":22,"endColumn":41},{"ruleId":"355","severity":1,"message":"387","line":22,"column":65,"nodeType":"357","messageId":"358","endLine":22,"endColumn":73},{"ruleId":"355","severity":1,"message":"376","line":27,"column":5,"nodeType":"357","messageId":"358","endLine":27,"endColumn":12},{"ruleId":"355","severity":1,"message":"377","line":29,"column":5,"nodeType":"357","messageId":"358","endLine":29,"endColumn":17},{"ruleId":"355","severity":1,"message":"388","line":55,"column":9,"nodeType":"357","messageId":"358","endLine":55,"endColumn":25},{"ruleId":"355","severity":1,"message":"389","line":5,"column":3,"nodeType":"357","messageId":"358","endLine":5,"endColumn":16},{"ruleId":"355","severity":1,"message":"390","line":6,"column":3,"nodeType":"357","messageId":"358","endLine":6,"endColumn":13},{"ruleId":"355","severity":1,"message":"391","line":14,"column":10,"nodeType":"357","messageId":"358","endLine":14,"endColumn":15},{"ruleId":"355","severity":1,"message":"362","line":15,"column":28,"nodeType":"357","messageId":"358","endLine":15,"endColumn":41},{"ruleId":"347","replacedBy":"392"},{"ruleId":"349","replacedBy":"393"},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'SelectsOptions' is defined but never used.","'classes' is assigned a value but never used.","'closeSnackbar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'method'. Either include it or remove the dependency array.","ArrayExpression",["396"],"'RootState' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'getLineasVentaYDevolucion' and 'lineas'. Either include them or remove the dependency array.",["397"],"'useState' is defined but never used.","'UseStates' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["398"],"'useFormMultipleImages' is defined but never used.","'loading' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'useDispatch' is defined but never used.","'deleteLinea' is defined but never used.","'lineas' is assigned a value but never used.","'FormControl' is defined but never used.",["399"],"'PrintIcon' is defined but never used.","'Button' is defined but never used.","'TAX_RATE' is assigned a value but never used.","'isCredit' is assigned a value but never used.","'campoObligatorio' is assigned a value but never used.","'dataURIToFile' is defined but never used.","'resizeFile' is defined but never used.","'error' is assigned a value but never used.",["394"],["395"],"no-global-assign","no-unsafe-negation",{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"404","fix":"406"},"Update the dependencies array to be: [method, url]",{"range":"407","text":"408"},"Update the dependencies array to be: [clientId, getLineasVentaYDevolucion, lineas]",{"range":"409","text":"410"},"Update the dependencies array to be: [fetchData]",{"range":"411","text":"412"},{"range":"413","text":"412"},[761,766],"[method, url]",[1820,1830],"[clientId, getLineasVentaYDevolucion, lineas]",[602,604],"[fetchData]",[641,643]]