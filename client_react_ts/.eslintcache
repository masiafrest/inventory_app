[{"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx":"1","/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts":"2","/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx":"3","/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js":"4","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts":"5","/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts":"6","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts":"7","/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx":"8","/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx":"9","/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx":"10","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx":"11","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts":"12","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx":"13","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts":"14","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx":"15","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx":"16","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx":"17","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx":"18","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts":"19","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx":"20","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx":"21","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx":"22","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx":"23","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx":"24","/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx":"25","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx":"26","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx":"27","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx":"28","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts":"29","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts":"30","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts":"31","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx":"32","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx":"33","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx":"34","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx":"35","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx":"36","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx":"37","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx":"38","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx":"39","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx":"40","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx":"41","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx":"42","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx":"43","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx":"44","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx":"45","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx":"46","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/headerTable/HeaderTable.tsx":"47","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx":"48","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx":"49","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx":"50","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx":"51","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx":"52","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx":"53","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx":"54","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx":"55","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx":"56","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/headerTable/HeaderTable.tsx":"57","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx":"58","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx":"59"},{"size":478,"mtime":1617144646218,"results":"60","hashOfConfig":"61"},{"size":425,"mtime":1615915047592,"results":"62","hashOfConfig":"61"},{"size":2148,"mtime":1617839915193,"results":"63","hashOfConfig":"61"},{"size":99,"mtime":1618011299432,"results":"64","hashOfConfig":"61"},{"size":699,"mtime":1616176850171,"results":"65","hashOfConfig":"61"},{"size":640,"mtime":1618094533005,"results":"66","hashOfConfig":"61"},{"size":2624,"mtime":1616176850019,"results":"67","hashOfConfig":"61"},{"size":541,"mtime":1616176849711,"results":"68","hashOfConfig":"61"},{"size":2176,"mtime":1617924951374,"results":"69","hashOfConfig":"61"},{"size":1311,"mtime":1615915047584,"results":"70","hashOfConfig":"61"},{"size":2537,"mtime":1615928883772,"results":"71","hashOfConfig":"61"},{"size":331,"mtime":1615915047592,"results":"72","hashOfConfig":"61"},{"size":978,"mtime":1617839214909,"results":"73","hashOfConfig":"61"},{"size":2220,"mtime":1617301189290,"results":"74","hashOfConfig":"61"},{"size":873,"mtime":1617663910643,"results":"75","hashOfConfig":"61"},{"size":988,"mtime":1617393041031,"results":"76","hashOfConfig":"61"},{"size":3161,"mtime":1617922883240,"results":"77","hashOfConfig":"61"},{"size":312,"mtime":1617393041063,"results":"78","hashOfConfig":"61"},{"size":840,"mtime":1615915047592,"results":"79","hashOfConfig":"61"},{"size":453,"mtime":1617320585941,"results":"80","hashOfConfig":"61"},{"size":471,"mtime":1615915047588,"results":"81","hashOfConfig":"61"},{"size":710,"mtime":1617144646222,"results":"82","hashOfConfig":"61"},{"size":602,"mtime":1616271845772,"results":"83","hashOfConfig":"61"},{"size":1046,"mtime":1615915047588,"results":"84","hashOfConfig":"61"},{"size":2078,"mtime":1615915047584,"results":"85","hashOfConfig":"61"},{"size":1312,"mtime":1617048618887,"results":"86","hashOfConfig":"61"},{"size":1802,"mtime":1618011097454,"results":"87","hashOfConfig":"61"},{"size":2572,"mtime":1618011539378,"results":"88","hashOfConfig":"61"},{"size":1167,"mtime":1618007234783,"results":"89","hashOfConfig":"61"},{"size":1465,"mtime":1617927107253,"results":"90","hashOfConfig":"61"},{"size":2949,"mtime":1617056327893,"results":"91","hashOfConfig":"61"},{"size":353,"mtime":1615915047588,"results":"92","hashOfConfig":"61"},{"size":369,"mtime":1615915047588,"results":"93","hashOfConfig":"61"},{"size":548,"mtime":1615915047588,"results":"94","hashOfConfig":"61"},{"size":1170,"mtime":1617466568147,"results":"95","hashOfConfig":"61"},{"size":1304,"mtime":1617393041031,"results":"96","hashOfConfig":"61"},{"size":1479,"mtime":1617393041031,"results":"97","hashOfConfig":"61"},{"size":1581,"mtime":1617990748222,"results":"98","hashOfConfig":"61"},{"size":1978,"mtime":1617997122785,"results":"99","hashOfConfig":"61"},{"size":1130,"mtime":1617393041031,"results":"100","hashOfConfig":"61"},{"size":869,"mtime":1617393041031,"results":"101","hashOfConfig":"61"},{"size":1335,"mtime":1617393041031,"results":"102","hashOfConfig":"61"},{"size":1181,"mtime":1617393041031,"results":"103","hashOfConfig":"61"},{"size":1196,"mtime":1617393041031,"results":"104","hashOfConfig":"61"},{"size":2660,"mtime":1617911710835,"results":"105","hashOfConfig":"61"},{"size":139,"mtime":1617316257026,"results":"106","hashOfConfig":"61"},{"size":1268,"mtime":1617990748194,"results":"107","hashOfConfig":"61"},{"size":1629,"mtime":1617918091446,"results":"108","hashOfConfig":"61"},{"size":2253,"mtime":1617919757696,"results":"109","hashOfConfig":"61"},{"size":919,"mtime":1617919904504,"results":"110","hashOfConfig":"61"},{"size":1702,"mtime":1617917293460,"results":"111","hashOfConfig":"61"},{"size":3330,"mtime":1617743444944,"results":"112","hashOfConfig":"61"},{"size":3216,"mtime":1617743364726,"results":"113","hashOfConfig":"61"},{"size":2691,"mtime":1617839433222,"results":"114","hashOfConfig":"61"},{"size":2589,"mtime":1617839353188,"results":"115","hashOfConfig":"61"},{"size":2696,"mtime":1617839420802,"results":"116","hashOfConfig":"61"},{"size":887,"mtime":1617990748122,"results":"117","hashOfConfig":"61"},{"size":2004,"mtime":1618011192537,"results":"118","hashOfConfig":"61"},{"size":2106,"mtime":1618007805249,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"8hdc3h",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"122"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"122"},"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx",[],["257","258"],"/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js",[],["259","260"],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts",["261"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//TODO: agregar recibo venta transferencia\nconst initialState: Recibos = {\n  empresa_cliente_id: null,\n  usuario_id: null,\n  venta: {\n    lineas: [],\n  },\n  transferencia: {\n    lineas: [],\n  },\n};\n\ninterface Tipo {\n  tipo: string;\n}\n\nconst reciboSlice = createSlice({\n  name: \"recibos\",\n  initialState,\n  reducers: {\n    //TODO: add change qty reducer\n    addUserId: (state, action) => {\n      state.usuario_id = action.payload;\n    },\n    delUserId: (state) => {\n      state.usuario_id = null;\n    },\n    addClienteId: (state, action) => {\n      console.log(action.payload);\n      state.empresa_cliente_id = action.payload;\n    },\n    modQty: (state, action) => {\n      console.log(action.payload);\n      const tipoRecibo = action.payload.tipo;\n      let { idx, qty } = action.payload;\n      if (qty < 0) qty = 0\n      state[tipoRecibo].lineas[idx].qty = qty;\n    },\n    pushLinea: (state, action: PayloadAction<Lineas & Tipo>) => {\n      //TODO: revisar si existe o no el item pusheado, si qty del payload es mayor actualizar la qty\n      const tipoRecibo = action.payload.tipo;\n      const hasId = state[tipoRecibo].lineas.some(\n        (linea) => linea.id === action.payload.id\n      );\n      if (hasId) {\n        state[tipoRecibo].lineas.filter((linea, idx) => {\n          if (linea.id === action.payload.id) {\n            state[tipoRecibo].lineas[idx] = action.payload;\n          }\n        });\n      } else {\n        state[tipoRecibo].lineas.push(action.payload);\n      }\n    },\n    addRecibo: (state, action: PayloadAction<Recibos & Tipo>) => {\n      const tipoRecibo = action.payload.tipo;\n      state[tipoRecibo] = action.payload;\n    },\n    deleteLinea: (state, action: PayloadAction<Tipo & { item_id: number }>) => {\n      const tipoRecibo = action.payload.tipo;\n      console.log(action.payload);\n      const newArr = state[tipoRecibo].lineas.filter(\n        (linea) => linea.id !== action.payload.item_id\n      );\n      state[tipoRecibo].lineas = newArr;\n    },\n  },\n});\n\nexport const {\n  addUserId,\n  delUserId,\n  addClienteId,\n  pushLinea,\n  modQty,\n  addRecibo,\n  deleteLinea,\n} = reciboSlice.actions;\n\nexport default reciboSlice.reducer;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx",["262"],"import { localIp } from \"../../../localIp\";\nimport { useState } from \"react\";\nimport useFetchData from \"../../../utils/hooks/useFetchData\";\nimport Fab from \"../../../components/FloatBtnAdd\";\nimport EditFormDialog from \"../../../components/EditableField/EditFormDialog\";\nimport DeleteBtn from \"../../../components/DeleteBtn\";\nimport AddBtn from \"./components/AddBtn\";\n\nimport {\n  Paper,\n  MobileStepper,\n  Typography,\n  Button,\n  CardContent,\n  CardActions,\n  Card,\n  Grid,\n} from \"@material-ui/core/\";\n\nexport default function ShowItems() {\n  const url = \"/items\";\n  const { data, setData } = useFetchData(url);\n  const [activeStep, setActiveStep] = useState(0);\n\n  const cardView = data.map((obj) => {\n    const src = \"http://\" + localIp + \":5050/uploads/\";\n    const imgPlaceholder = \"https://via.placeholder.com/200\";\n    const activeImg =\n      obj.images.length > 0\n        ? src + obj.images[activeStep].url_path\n        : imgPlaceholder;\n    const maxSteps = obj.images.length;\n    return (\n      <Grid item xs={12} sm={6} md={4} lg={3} key={obj.id}>\n        <Card\n          style={{\n            maxWidth: 300,\n          }}\n        >\n          <img key=\"img\" src={activeImg} alt={obj.marca + \"-\" + obj.modelo} />\n          <MobileStepper\n            key=\"mobileStepper\"\n            steps={maxSteps}\n            position=\"static\"\n            variant=\"text\"\n            nextButton={\n              <Button\n                id=\"mobileSteperNextBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep + 1)\n                }\n                disabled={activeStep === maxSteps - 1 || activeStep === 0}\n              >\n                Next\n              </Button>\n            }\n            backButton={\n              <Button\n                id=\"mobileSteperBackBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep - 1)\n                }\n                disabled={activeStep === 0}\n              >\n                Back\n              </Button>\n            }\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {`${obj.marca} ${obj.modelo} ${obj.color} ${obj.descripcion}`}\n            </Typography>\n            <EditFormDialog name={\"descripcion\"} data={obj} url={url} />\n            <Typography>\n              {`Ubicacion: ${obj.lugar.direccion}, ${obj.lugar.tipo}. | Stock: ${obj.stock}`}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <DeleteBtn url={url} id={obj.id} data={data} setData={setData} />\n            <AddBtn obj={obj} reciboTipo=\"venta\">\n              agregar a venta\n            </AddBtn>\n            <AddBtn obj={obj} reciboTipo=\"transferencia\">\n              transferir\n            </AddBtn>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  });\n  return (\n    <>\n      <Typography variant=\"h3\">Items</Typography>\n      <Grid container spacing={2} justify='center' alignContent='center' alignItems='center'>\n        {cardView}\n      </Grid>\n      <Fab url=\"/add/item\" />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts",["263"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchData(url, method = \"get\") {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState(\"\");\n  console.log(error);\n  console.log(\"fetch api\", url);\n  useEffect(() => {\n    console.log(\"use effect fetchDatafrom api\");\n    const fetchDataFromApi = async () => {\n      try {\n        setIsFetching(true);\n        const res = await axios[method](url);\n        setData(res.data);\n        console.log(\"useFetchData res.data:  \", res.data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setIsFetching(false);\n      }\n    };\n    fetchDataFromApi();\n  }, [url]);\n  console.log(error);\n  return { data, setData, isFetching, error };\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx",["264"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushLinea } from \"../../../../redux/features/recibo/reciboSlice\";\nimport { RootState } from \"../../../../redux/rootReducer\";\n\nexport default function AddBtn({ obj, reciboTipo, children }) {\n  const recibo = useSelector((state: RootState) => state.recibo);\n  const dispatch = useDispatch();\n  return (\n    <Button\n      onClick={() => {\n        const { lineas } = recibo[reciboTipo];\n        const newLinea = { ...obj };\n        newLinea.tipo = reciboTipo;\n        newLinea.qty = 1;\n        dispatch(pushLinea(newLinea));\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx",["265"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function ImagesUpload({ onChange }) {\n  //TODO: boton agregar segundo imagen\n  return (\n    <>\n      <input\n        name=\"images\"\n        accept=\"image/*\"\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={onChange}\n      />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx",["266","267"],"import { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/rootReducer\";\nimport { reciboPaths, addPaths, showPaths } from \"../paths\";\nimport { Button, Divider, Grid } from \"@material-ui/core\";\n\nconst Home = () => {\n  const user: any = useSelector((state: RootState) => state.user);\n\n  const addPathsBtn = addPaths.map((path) => {\n    return (\n      <Grid item key={path}>\n        <Button variant=\"contained\">\n          <Link to={path}>Agregar {path.slice(5)}</Link>\n        </Button>\n      </Grid>\n    );\n  });\n  const showPathsBtn = showPaths.map((path) => {\n    return (\n      <Grid item key={path}>\n        <Button variant=\"contained\">\n          <Link to={path}>Ver {path.slice(6)}</Link>\n        </Button>\n      </Grid>\n    );\n  });\n\n\n  return (\n    <div>\n      <h1> Home </h1>\n      <pre>authenticated: {user.authenticated ? \"true\" : \"false\"}</pre>\n      <Grid container spacing={5}>\n        <Grid item container spacing={1}>\n          {addPathsBtn}\n        </Grid>\n        <Grid item container spacing={1}>\n          {showPathsBtn}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx",["268"],"\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport VentaTable from \"./components/VentaTable\";\nimport { Button } from \"@material-ui/core\";\n\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport HeaderTable from \"./components/headerTable/HeaderTable\";\n\nfunction roundNum(num) {\n  return Math.round((num + Number.EPSILON) * 100) / 100;\n}\n\nfunction calcSubTotal(items: Lineas[]) {\n  const sub = items\n    .map(({ precio, qty }) => precio.precio * qty)\n    .reduce((sum, i) => sum + i, 0);\n  return sub;\n}\nconst TAX_RATE = 0.07;\nexport default function VentaRecibo() {\n  const usuario_id = useSelector((state: RootState) => state.user.credentials.id)\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n  const { lineas } = recibo.venta;\n  //TODO: maybe change all this useState to a reduceState\n  const [clienteId, setClienteId] = useState()\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [isTax, setIsTax] = useState(true);\n  const [isCredit, setIsCredit] = useState(false);\n\n  const history = useHistory();\n\n  const onClickHandler = () => history.push(\"/show/items\");\n\n  const postReciboHandler = async () => {\n    const cleanLines = lineas.map((item) => {\n      const newLines = {\n        item_id: item.id,\n        qty: item.qty,\n        precio: item.precio.precio,\n      };\n      return newLines;\n    });\n    const ventaObj = {\n      usuario_id,\n      empresa_cliente_id: clienteId,\n      sub_total: subTotal,\n      tax,\n      total,\n      credito: isCredit,\n      lineas: cleanLines,\n    };\n    console.log(ventaObj);\n    const res = await axios.post(\"/recibos/venta/\", ventaObj);\n    console.log(res);\n  };\n\n  useEffect(() => {\n    //FIX: check why it render 3 time on modQty click\n    setSubTotal(roundNum(calcSubTotal(lineas)));\n    setTax(roundNum(TAX_RATE * subTotal));\n    if (isTax) {\n      setTax(roundNum(TAX_RATE * subTotal));\n      setTotal(roundNum(tax + subTotal));\n    } else {\n      setTax(0);\n      setTotal(roundNum(subTotal));\n    }\n  }, [lineas, subTotal]);\n\n  return (\n    <>\n      <HeaderTable creditState={[isCredit, setIsCredit]} clienteState={[clienteId, setClienteId]} />\n      <VentaTable\n        items={lineas}\n        invoice={[subTotal, tax, total]}\n        TAX_RATE={TAX_RATE}\n        onClickHandler={onClickHandler}\n        taxState={[isTax, setIsTax]}\n      />\n      <Button variant=\"contained\" onClick={postReciboHandler}>\n        agregar recibo\n      </Button>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/headerTable/HeaderTable.tsx",["269","270","271"],"import { useState } from \"react\";\nimport SelectsOptions from \"../../../../../../components/SelectsOptions\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../../../../redux/rootReducer\";\nimport { addClienteId } from \"../../../../../../redux/features/recibo/reciboSlice\";\nimport {\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\n\nexport default function HeaderTable({ creditState, clienteState }) {\n  const [isCredit, setIsCredit] = creditState\n  const [clienteId, setClienteId] = clienteState\n  const dispatch = useDispatch();\n  const [cliente] = useState([]);\n\n  const onChangeHandler = (e) => {\n    console.log(e.target.value);\n    setClienteId(e.target.value)\n    dispatch(addClienteId(e.target.value));\n    console.log(cliente);\n  };\n  return (\n    <Paper>\n      <SelectsOptions\n        form={cliente}\n        onChange={onChangeHandler}\n        name=\"cliente\"\n        url={\"clientes\"}\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isCredit}\n            onChange={(e) => setIsCredit(!isCredit)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Credito\"\n      />\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx",["272","273","274"],"import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDispatch } from \"react-redux\";\nimport { deleteLinea } from \"../../../../../../redux/features/recibo/reciboSlice\";\n\nimport ModQty from '../../../components/ModQty'\nimport SelectLugar from \"../SelectLugar\";\n\n\nfunction OrderTable({ items, onClickHandler, destinoId, onSelectHandler }) {\n\n  const showRows = items.map((row, idx) => (\n    <TableRow key={row.id}>\n      <TableCell align=\"left\">\n        {/* <DelRow item_id={row.id} /> */}\n        {/* {row.qty} */}\n        <ModQty row={row} reciboTipo=\"transferencia\" idx={idx} />\n      </TableCell>\n      <TableCell align=\"left\">{`${row.marca} ${row.modelo} ${row.color} ${row.descripcion} `}</TableCell>\n      <TableCell align=\"center\">\n        {row.lugar.direccion}, {row.lugar.tipo}\n      </TableCell>\n      <TableCell align=\"center\">\n\n        <SelectLugar\n          destinoId={destinoId}\n          onChange={onSelectHandler}\n          name=\"lugar\"\n          currLugarId={row.lugar.id}\n        />\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer component={Paper}>\n      <Table style={{ minWidth: 425 }} padding=\"default\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Qty</TableCell>\n            <TableCell align=\"center\">Descripcion</TableCell>\n            <TableCell align=\"center\">Origen</TableCell>\n            <TableCell align=\"center\">Destino</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showRows}\n          <TableRow>\n            <IconButton size=\"small\" onClick={onClickHandler}>\n              <AddBoxIcon />\n            </IconButton>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default OrderTable;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx",["275"],"import { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport useFetchData from \"../../../../../utils/hooks/useFetchData\";\n\nexport default function SelectLugar({ destinoId, name, onChange, currLugarId }) {\n  const history = useHistory();\n  const { data } = useFetchData(\"lugares\");\n  const dataFiltered = data.filter(data => data.id !== currLugarId)\n  const dataMenuItem = dataFiltered.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {`${data.direccion}, ${data.tipo}`}\n    </MenuItem>\n  ));\n\n  return (\n    <form>\n      <InputLabel>Destino</InputLabel>\n      <Select value={destinoId} onChange={onChange}>\n        {dataMenuItem}{\" \"}\n        <MenuItem\n          key={`add_${name}`}\n          onClick={() => history.push(`/add/${name}`)}\n        >\n          agregar otro {name}\n        </MenuItem>\n      </Select>\n    </form>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx",["276"],"import { TextField, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\n\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteLinea,\n  modQty,\n} from \"../../../../redux/features/recibo/reciboSlice\";\n\nexport default function ModQty({ row, reciboTipo, idx }) {\n  const dispatch = useDispatch();\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n\n  const DelRow = ({ reciboTipo }) => {\n    const handleClick = () => {\n      const tipoAndId = { tipo: reciboTipo, item_id: row.id };\n      dispatch(deleteLinea(tipoAndId));\n    };\n    return (\n      <IconButton size=\"small\" onClick={handleClick}>\n        <DeleteIcon />\n      </IconButton>\n    );\n  };\n\n  const handleArrowClick = (num) => {\n    const payload = {\n      idx,\n      tipo: reciboTipo,\n      qty: row.qty + num,\n    };\n    if (payload.qty < 1) payload.qty = 1\n    dispatch(modQty(payload));\n  };\n\n  const onChangeHandle = e => {\n    const payload = {\n      idx,\n      tipo: reciboTipo,\n      qty: e.target.value,\n    };\n    dispatch(modQty(payload));\n\n  }\n\n  return (\n    <>\n      <DelRow reciboTipo={reciboTipo} />\n      <TextField style={{ width: 30 }} value={row.qty} onChange={onChangeHandle} />\n      <IconButton size=\"small\" onClick={() => handleArrowClick(1)}>\n        <KeyboardArrowUpIcon />\n      </IconButton>\n      <IconButton size=\"small\" onClick={() => handleArrowClick(-1)}>\n        <KeyboardArrowDownIcon />\n      </IconButton>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx",["277","278"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n}));\n\nexport default function ShowVentas() {\n  const classes = useStyles();\n\n  const url = '/recibos/venta'\n  const { data, setData } = useFetchData(url)\n\n  const accordionView = data.map(obj =>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography >N° Recibo: {obj.id}</Typography>\n        <Typography className={classes.heading}>Ciente: {obj.cliente.nombre}</Typography>\n        <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n        <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Qty</TableCell>\n                <TableCell align=\"center\">Descripcion</TableCell>\n                <TableCell align=\"right\">Precio</TableCell>\n                <TableCell align=\"right\">Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {obj.lineas.map(linea => (\n                <TableRow key={linea.id}>\n                  <TableCell align=\"left\">\n                    {linea.qty}\n                  </TableCell>\n                  <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                  <TableCell align=\"right\">{linea.precio.toFixed(2)}</TableCell>\n                  <TableCell align=\"right\">\n                    {(linea.precio * linea.qty).toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell rowSpan={3} />\n                <TableCell colSpan={2}>Subtotal</TableCell>\n                <TableCell align=\"right\">{obj.sub_total}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={1}>Tax</TableCell>\n                <TableCell align=\"right\">{`${(obj.tax * 100).toFixed(0)} %`}</TableCell>\n                <TableCell align=\"right\">{obj.tax}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2}>Total</TableCell>\n                <TableCell align=\"right\">{obj.total}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n    </Accordion>\n  )\n\n  return (\n    <>\n      <Typography variant='h3'>Recibos Ventas</Typography>\n      {accordionView}\n    </>\n  )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx",["279","280"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n}));\n\nexport default function ShowTransferencias() {\n    const classes = useStyles();\n\n    const url = '/recibos/transferencia'\n    const { data, setData } = useFetchData(url)\n\n    const accordionView = data.map(obj =>\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>N° Recibo: {obj.id}</Typography>\n                <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n                <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Descripcion</TableCell>\n                                <TableCell align=\"center\">Qty</TableCell>\n                                <TableCell align=\"right\">Origen</TableCell>\n                                <TableCell align=\"right\">Destino</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {obj.lineas.map(linea => (\n                                <TableRow key={linea.id}>\n                                    <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                                    <TableCell align=\"left\">\n                                        {linea.qty}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{`${linea.item.lugar.direccion}, ${linea.item.lugar.tipo}`}</TableCell>\n                                    <TableCell align=\"right\">\n                                        {`${linea.destino.direccion}, ${linea.destino.tipo}`}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    )\n\n    return (\n        <>\n            <Typography variant='h3'>Recibos Ventas</Typography>\n            {accordionView}\n        </>\n    )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx",["281","282"],"import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DevolucionTable from \"./components/DevolucionTable\";\nimport { Button } from \"@material-ui/core\";\n\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport HeaderTable from \"./components/headerTable/HeaderTable\";\n\nfunction roundNum(num) {\n  return Math.round((num + Number.EPSILON) * 100) / 100;\n}\n\nfunction calcSubTotal(items: Lineas[]) {\n  const sub = items\n    .map(({ precio, qty }) => precio.precio * qty)\n    .reduce((sum, i) => sum + i, 0);\n  return sub;\n}\nconst TAX_RATE = 0.07;\nexport default function Devolucion() {\n  const usuario_id = useSelector((state: RootState) => state.user.credentials.id)\n  const recibo: Recibos = useSelector((state: RootState) => state.recibo);\n  const { lineas } = recibo.venta;\n  //TODO: maybe change all this useState to a reduceState\n  const [subTotal, setSubTotal] = useState(0);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [isTax, setIsTax] = useState(true);\n  const [isCredit, setIsCredit] = useState(false);\n\n  const history = useHistory();\n\n  const onClickHandler = () => history.push(\"/show/items\");\n\n  const postReciboHandler = async () => {\n    const { empresa_cliente_id } = recibo;\n    const cleanLines = lineas.map((item) => {\n      const newLines = {\n        item_id: item.id,\n        qty: item.qty,\n        precio: item.precio.precio,\n      };\n      return newLines;\n    });\n    const devolucionObj = {\n      usuario_id,\n      empresa_cliente_id,\n      sub_total: subTotal,\n      tax,\n      total,\n      credito: isCredit,\n      lineas: cleanLines,\n    };\n    console.log(devolucionObj);\n    const res = await axios.post(\"/recibos/devolucion\", devolucionObj);\n    console.log(res);\n  };\n\n  useEffect(() => {\n    //FIX: check why it render 3 time on modQty click\n    setSubTotal(roundNum(calcSubTotal(lineas)));\n    setTax(roundNum(TAX_RATE * subTotal));\n    if (isTax) {\n      setTax(roundNum(TAX_RATE * subTotal));\n      setTotal(roundNum(tax + subTotal));\n    } else {\n      setTax(0);\n      setTotal(roundNum(subTotal));\n    }\n  }, [lineas,]);\n\n  return (\n    <>\n      <HeaderTable />\n      <DevolucionTable\n        items={lineas}\n        invoice={[subTotal, tax, total]}\n        TAX_RATE={TAX_RATE}\n        onClickHandler={onClickHandler}\n        taxState={[isTax, setIsTax]}\n      />\n      <Button variant=\"contained\" onClick={postReciboHandler}>\n        agregar recibo\n      </Button>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/headerTable/HeaderTable.tsx",["283","284","285","286"],"import { useState } from \"react\";\nimport SelectsOptions from \"../../../../../../components/SelectsOptions\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../../../../redux/rootReducer\";\nimport { addClienteId } from \"../../../../../../redux/features/recibo/reciboSlice\";\nimport {\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\n\nexport default function HeaderTable() {\n  const dispatch = useDispatch();\n  const [cliente] = useState([]);\n\n  const onChangeHandler = (e) => {\n    console.log(e.target.value);\n    dispatch(addClienteId(e.target.value));\n    // setCliente(e.target.value);\n    console.log(cliente);\n  };\n  return (\n    <Paper>\n      <SelectsOptions\n        form={cliente}\n        onChange={onChangeHandler}\n        name=\"cliente\"\n        url={\"clientes\"}\n      />\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx",["287"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Modal from './Modal'\n\nexport default function SelectsOptions({ onChange, name, url, form }) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false)\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data)\n      })\n      .catch((err) => console.log(err));\n  }\n  useEffect(() => {\n    fetchData()\n  }, []);\n  let menuItemToShow = [];\n  switch (url) {\n    case \"categorias\":\n    case \"proveedores\":\n      menuItemToShow.push(\"nombre\");\n      break;\n    case \"items\":\n      menuItemToShow.push(\"marca\");\n      menuItemToShow.push(\"modelo\");\n      break;\n    case \"usuarios/roles\":\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"lugares\":\n      menuItemToShow.push(\"direccion\");\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"clientes\":\n      menuItemToShow.push(\"nombre\");\n      menuItemToShow.push(\"direccion\");\n      break;\n  }\n\n  console.log(name, url, data);\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {menuItemToShow.length > 1\n        ? `${data[menuItemToShow[0]]}, ${data[menuItemToShow[1]]}`\n        : `${data[menuItemToShow[0]]}`}\n    </MenuItem>\n  ));\n\n  const name_id = `${name}_id`;\n\n  return (\n    <Grid item key={`${name}-select`}>\n      <InputLabel id={name_id}>{name}</InputLabel>\n      <Select\n        onChange={onChange}\n        labelId={name_id}\n        id={name_id}\n        name={name_id}\n        value={form[name_id]}\n        fullWidth\n      >\n        {dataMenuItem}\n        <MenuItem\n          key={`add_${name}`}\n          onClick={() => setOpenModal(true)}\n        >\n          agregar otra {name}\n        </MenuItem>\n      </Select>\n      <Modal state={[openModal, setOpenModal]} fetch={fetchData}\n        url={url} />\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx",["288","289"],"import { DialogTitle, Dialog, DialogContent, DialogActions, TextField, Button } from '@material-ui/core';\nimport useForm from '../../../utils/hooks/useForm';\n\nexport default function Modal({ state, url, fetch }) {\n    let [openModal, setOpenModal] = state;\n\n    const initialState = {\n        lugares:\n        {\n            direccion: \"\",\n            tipo: \"\",\n        },\n        categorias: { nombre: \"\" },\n        proveedores:\n        {\n            nombre: \"\",\n            direccion: \"\",\n            telefono: \"\",\n        }, 'usuarios/roles': {\n            tipo: ''\n        }, clientes: {\n            nombre: \"\",\n            telefono: \"\",\n            direccion: \"\",\n            email: \"\",\n            logo_url: \"\",\n            website_url: \"\",\n            telefono_2: \"\",\n        },\n\n    }\n\n    const textFieldLabel = Object.keys(initialState[url])\n\n    const { data, loading, handleChange, handleSubmit, handleSubmitPromise } = useForm(\n        initialState[url],\n        `/${url}`\n    );\n\n    const renderTextField = textFieldLabel.map((detail) => (\n        <TextField\n            key={detail}\n            id={detail}\n            name={detail}\n            label={detail}\n            value={data[detail]}\n            onChange={handleChange}\n            fullWidth\n        // helperText={errors[detail]}\n        // error={errors[detail] ? true : false}\n        />\n    ));\n    const handleClose = () => {\n        setOpenModal(false);\n    };\n    const handleClick = async (e) => {\n        await handleSubmitPromise(e)\n        fetch()\n        setOpenModal(false);\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={openModal}>\n            <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n            <DialogContent>\n                {renderTextField}\n            </DialogContent>\n            <DialogActions>\n                <Button type='submit' variant=\"contained\" color=\"primary\"\n                    onClick={handleClick}>\n                    aceptar\n                </Button>\n            </DialogActions>\n        </Dialog >\n    )\n\n}",{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":48,"column":54,"nodeType":"296","messageId":"297","endLine":48,"endColumn":56},{"ruleId":"298","severity":1,"message":"299","line":10,"column":3,"nodeType":"300","messageId":"301","endLine":10,"endColumn":8},{"ruleId":"302","severity":1,"message":"303","line":25,"column":6,"nodeType":"304","endLine":25,"endColumn":11,"suggestions":"305"},{"ruleId":"298","severity":1,"message":"306","line":13,"column":17,"nodeType":"300","messageId":"301","endLine":13,"endColumn":23},{"ruleId":"298","severity":1,"message":"307","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"298","severity":1,"message":"308","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":21},{"ruleId":"298","severity":1,"message":"309","line":5,"column":18,"nodeType":"300","messageId":"301","endLine":5,"endColumn":25},{"ruleId":"302","severity":1,"message":"310","line":75,"column":6,"nodeType":"304","endLine":75,"endColumn":24,"suggestions":"311"},{"ruleId":"298","severity":1,"message":"312","line":5,"column":10,"nodeType":"300","messageId":"301","endLine":5,"endColumn":21},{"ruleId":"298","severity":1,"message":"313","line":6,"column":10,"nodeType":"300","messageId":"301","endLine":6,"endColumn":19},{"ruleId":"298","severity":1,"message":"314","line":15,"column":10,"nodeType":"300","messageId":"301","endLine":15,"endColumn":19},{"ruleId":"298","severity":1,"message":"315","line":10,"column":8,"nodeType":"300","messageId":"301","endLine":10,"endColumn":18},{"ruleId":"298","severity":1,"message":"316","line":12,"column":10,"nodeType":"300","messageId":"301","endLine":12,"endColumn":21},{"ruleId":"298","severity":1,"message":"317","line":13,"column":10,"nodeType":"300","messageId":"301","endLine":13,"endColumn":21},{"ruleId":"298","severity":1,"message":"318","line":1,"column":10,"nodeType":"300","messageId":"301","endLine":1,"endColumn":21},{"ruleId":"298","severity":1,"message":"319","line":15,"column":9,"nodeType":"300","messageId":"301","endLine":15,"endColumn":24},{"ruleId":"298","severity":1,"message":"320","line":2,"column":69,"nodeType":"300","messageId":"301","endLine":2,"endColumn":73},{"ruleId":"298","severity":1,"message":"321","line":26,"column":17,"nodeType":"300","messageId":"301","endLine":26,"endColumn":24},{"ruleId":"298","severity":1,"message":"320","line":2,"column":69,"nodeType":"300","messageId":"301","endLine":2,"endColumn":73},{"ruleId":"298","severity":1,"message":"321","line":26,"column":19,"nodeType":"300","messageId":"301","endLine":26,"endColumn":26},{"ruleId":"298","severity":1,"message":"322","line":33,"column":20,"nodeType":"300","messageId":"301","endLine":33,"endColumn":31},{"ruleId":"302","severity":1,"message":"323","line":74,"column":6,"nodeType":"304","endLine":74,"endColumn":15,"suggestions":"324"},{"ruleId":"298","severity":1,"message":"312","line":5,"column":10,"nodeType":"300","messageId":"301","endLine":5,"endColumn":21},{"ruleId":"298","severity":1,"message":"313","line":6,"column":10,"nodeType":"300","messageId":"301","endLine":6,"endColumn":19},{"ruleId":"298","severity":1,"message":"325","line":9,"column":3,"nodeType":"300","messageId":"301","endLine":9,"endColumn":19},{"ruleId":"298","severity":1,"message":"326","line":10,"column":3,"nodeType":"300","messageId":"301","endLine":10,"endColumn":11},{"ruleId":"302","severity":1,"message":"327","line":20,"column":6,"nodeType":"304","endLine":20,"endColumn":8,"suggestions":"328"},{"ruleId":"298","severity":1,"message":"329","line":35,"column":19,"nodeType":"300","messageId":"301","endLine":35,"endColumn":26},{"ruleId":"298","severity":1,"message":"330","line":35,"column":42,"nodeType":"300","messageId":"301","endLine":35,"endColumn":54},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'method'. Either include it or remove the dependency array.","ArrayExpression",["333"],"'lineas' is assigned a value but never used.","'Button' is defined but never used.","'reciboPaths' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'isTax' and 'tax'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotal' needs the current value of 'tax'.",["334"],"'useSelector' is defined but never used.","'RootState' is defined but never used.","'clienteId' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'useDispatch' is defined but never used.","'deleteLinea' is defined but never used.","'FormControl' is defined but never used.","'recibo' is assigned a value but never used.","'Grid' is defined but never used.","'setData' is assigned a value but never used.","'setIsCredit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isTax', 'subTotal', and 'tax'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTax' needs the current value of 'subTotal'.",["335"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["336"],"'loading' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"339","fix":"341"},{"desc":"342","fix":"343"},"Update the dependencies array to be: [method, url]",{"range":"344","text":"345"},"Update the dependencies array to be: [isTax, lineas, subTotal, tax]",{"range":"346","text":"347"},{"range":"348","text":"347"},"Update the dependencies array to be: [fetchData]",{"range":"349","text":"350"},[761,766],"[method, url]",[2206,2224],"[isTax, lineas, subTotal, tax]",[2218,2227],[572,574],"[fetchData]"]