[{"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\index.tsx":"1","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\reportWebVitals.ts":"2","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\App.tsx":"3","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\stores.ts":"4","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\home.tsx":"5","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\Home.tsx":"6","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\SignIn.tsx":"7","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\utils\\AuthRouth.tsx":"8","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\NavBar.tsx":"9","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\ItemCard.tsx":"10","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\OrderTable.tsx":"11","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\ItemAccordion.tsx":"12","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\fakeDataToTest.ts":"13","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\rootReducer.ts":"14","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\features\\user\\userSlice.ts":"15"},{"size":500,"mtime":1609869438514,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1925,"mtime":1610059260906,"results":"19","hashOfConfig":"17"},{"size":383,"mtime":1610049496853,"results":"20","hashOfConfig":"17"},{"size":172,"mtime":1609554991152,"results":"21","hashOfConfig":"17"},{"size":503,"mtime":1610059439475,"results":"22","hashOfConfig":"17"},{"size":2851,"mtime":1610056733034,"results":"23","hashOfConfig":"17"},{"size":1101,"mtime":1610056306576,"results":"24","hashOfConfig":"17"},{"size":1390,"mtime":1610056732972,"results":"25","hashOfConfig":"17"},{"size":3599,"mtime":1609967470734,"results":"26","hashOfConfig":"17"},{"size":4060,"mtime":1609954723505,"results":"27","hashOfConfig":"17"},{"size":3249,"mtime":1609967466244,"results":"28","hashOfConfig":"17"},{"size":2564,"mtime":1609967437347,"results":"29","hashOfConfig":"17"},{"size":256,"mtime":1610056733034,"results":"30","hashOfConfig":"17"},{"size":2617,"mtime":1610059138584,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nf8rzl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\index.tsx",[],["69","70"],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\reportWebVitals.ts",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\App.tsx",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\stores.ts",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\home.tsx",[],["71","72"],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\Home.tsx",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\pages\\SignIn.tsx",["73","74"],"import React, { useState, useEffect } from \"react\";\r\n\r\n//MUI\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n//Redux\r\nimport { RootState } from \"../redux/rootReducer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signIn, signOut } from \"../redux/features/user/userSlice\";\r\n\r\ninterface UserInput {\r\n  nombre: string;\r\n  password: string;\r\n}\r\n\r\nfunction SignIn(props: any) {\r\n  const dispatch = useDispatch();\r\n  const user: any = useSelector((state: RootState) => state.user);\r\n  const initialValue: UserInput = { nombre: \"\", password: \"\" };\r\n  const [userData, setUserData] = useState(initialValue);\r\n  const [errors, setErrors] = useState({\r\n    nombre: \"\",\r\n    password: \"\",\r\n    general: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user.errors) {\r\n      setErrors(user.errors);\r\n    }\r\n    setLoading(user.loading);\r\n  }, [user.errors, user.loading]);\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"submit: \", e);\r\n    dispatch(signIn(userData, props.history));\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    setUserData((value) => ({\r\n      ...value,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" fixed>\r\n      <Typography variant=\"h2\">SignIn</Typography>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"nombre\"\r\n          name=\"nombre\"\r\n          type=\"nombre\"\r\n          label=\"Nombre\"\r\n          value={userData.nombre}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          helperText={errors.nombre}\r\n          error={errors.nombre ? true : false}\r\n        />\r\n        <TextField\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          value={userData.password}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          helperText={errors.password}\r\n          error={errors.password ? true : false}\r\n        />\r\n        {errors.general && (\r\n          <Typography variant=\"body2\">{errors.general}</Typography>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={loading}\r\n        >\r\n          SignIn\r\n          {loading && <CircularProgress size={30} />}\r\n        </Button>\r\n        <br></br>\r\n        {/* <span>\r\n            no tienes cuenta? registrate <Link to=\"/signup\">aqui</Link>\r\n          </span> */}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\utils\\AuthRouth.tsx",["75","76","77"],"import React, { ReactNode } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/rootReducer\";\r\nimport SignIn from \"../pages/SignIn\";\r\n\r\ninterface IAuthProps {\r\n  Component: React.FC; //maybe work on funcion component and not class component or React.ComponentType<any>;\r\n  authenticated: boolean;\r\n  rest: any;\r\n  [key: string]: any;\r\n}\r\n\r\nexport const AuthRouth: React.FC<any> = ({\r\n  Component,\r\n  authenticated,\r\n  ...rest\r\n}) => {\r\n  const user = useSelector((state: RootState) => state.user);\r\n  // let redirectPath = \"\";\r\n  // if (!authenticated) {\r\n  //   redirectPath = \"/signin\";\r\n  // }\r\n  // if (redirectPath) {\r\n  //   const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\r\n  //   return <Route {...rest} component={renderComponent} render={undefined} />;\r\n  // } else {\r\n  //   return <Route {...rest} />;\r\n  // }\r\n\r\n  return user.authenticated ? (\r\n    <Route {...rest} />\r\n  ) : (\r\n    <Redirect to={{ pathname: \"/signin\" }} />\r\n  );\r\n};\r\n\r\nexport default AuthRouth;\r\n","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\NavBar.tsx",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\ItemCard.tsx",["78"],"import React, { useState } from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\n\r\nimport { fakeReduxStore, itemData, image } from \"../fakeDataToTest\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\", // 16:9\r\n    },\r\n    expand: {\r\n      transform: \"rotate(0deg)\",\r\n      marginLeft: \"auto\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: \"rotate(180deg)\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction ItemCard() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const renderInv = itemData.inventarios.map((inv: any) => {\r\n    return (\r\n      <>\r\n        <CardActions>\r\n          <CardContent>\r\n            {showKeyValueText(inv, \"sku\")}\r\n            {showKeyValueText(inv, \"qty\")}\r\n            {showKeyValueText(inv, \"color\")}\r\n            {showKeyValueText(inv.precio, \"precio\")}\r\n            {inv.precio.oferta\r\n              ? showKeyValueText(inv.precio, \"oferta_precio\")\r\n              : null}\r\n            {showKeyValueText(inv.precio, \"precio_min\")}\r\n          </CardContent>\r\n          <IconButton>\r\n            <PostAddIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ReceiptIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Divider />\r\n      </>\r\n    );\r\n  });\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={`Marca: ${itemData.marca}`}\r\n        subheader={`Modelo: ${itemData.modelo}`}\r\n      />\r\n      <CardMedia className={classes.media} image={image} title=\"Paella dish\" />\r\n      <CardContent>\r\n        {showKeyValueText(itemData, \"descripcion\")}\r\n        {showKeyValueText(itemData, \"barcode\")}\r\n        {showKeyValueText(itemData, \"categoria_id\")}\r\n        {showKeyValueText(itemData, \"categoria_2_id\")}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        {renderInv}\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction showKeyValueText(data: any, key: string) {\r\n  return <Typography>{`${key}: ${data[key]}`}</Typography>;\r\n}\r\nexport default ItemCard;\r\n","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\OrderTable.tsx",["79","80","81","82"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\n\r\nimport { fakeReduxStore, itemData } from \"../fakeDataToTest\";\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction ccyFormat(num: number) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty: number, price: number) {\r\n  return qty * price;\r\n}\r\n\r\nfunction createRow(\r\n  sku: string,\r\n  marca: string,\r\n  modelo: string,\r\n  qty: number,\r\n  price: number\r\n) {\r\n  const total = priceRow(qty, price);\r\n  return { sku, marca, modelo, qty, price, total };\r\n}\r\n\r\ninterface Row {\r\n  sku: string;\r\n  marca: string;\r\n  modelo: string;\r\n  qty: number;\r\n  price: number;\r\n}\r\n\r\nfunction subtotal(items: Row[]) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow(\"pap-box\", \"Paperclips (Box)\", \"ab\", 100, 1.15),\r\n  createRow(\"pap-cas\", \"Paper (Case)\", \"ab\", 10, 45.99),\r\n  createRow(\"was-bas\", \"Waste Basket\", \"ec\", 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nfunction OrderTable() {\r\n  const classes = useStyles();\r\n  const [itemList, setItemList] = useState([]);\r\n\r\n  useEffect(() => {}, [itemList]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"spanning table\" padding=\"none\" size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align=\"right\" colSpan={2}>\r\n              Price\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Sku</TableCell>\r\n            <TableCell align=\"left\">Marca</TableCell>\r\n            <TableCell align=\"left\">Modelo</TableCell>\r\n            <TableCell align=\"left\">Qty.</TableCell>\r\n            <TableCell align=\"left\">Price</TableCell>\r\n            <TableCell align=\"left\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.sku}>\r\n              <TableCell align=\"left\">{row.sku}</TableCell>\r\n              <TableCell align=\"left\">{row.marca}</TableCell>\r\n              <TableCell align=\"left\">{row.modelo}</TableCell>\r\n              <TableCell align=\"left\">{row.qty}</TableCell>\r\n              <TableCell align=\"left\">{row.price}</TableCell>\r\n              <TableCell align=\"left\">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          <TableRow>\r\n            <IconButton onClick={() => {}}>\r\n              <AddBoxIcon />\r\n            </IconButton>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={3}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\r\n              0\r\n            )} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={3}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default OrderTable;\r\n","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\components\\ItemAccordion.tsx",["83","84"],"import React from \"react\";\r\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Divider, Grid } from \"@material-ui/core\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\n\r\nimport { fakeReduxStore, itemData, image } from \"../fakeDataToTest\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ItemAccordion() {\r\n  const classes = useStyles();\r\n\r\n  function showKeyValueText(data: any, key: string) {\r\n    return <Typography>{`${key}: ${data[key]}`}</Typography>;\r\n  }\r\n  const renderInv = itemData.inventarios.map((inv: any) => {\r\n    return (\r\n      <Grid>\r\n        {showKeyValueText(inv, \"sku\")}\r\n        {showKeyValueText(inv, \"qty\")}\r\n        {showKeyValueText(inv, \"color\")}\r\n        {showKeyValueText(inv.precio, \"precio\")}\r\n        {inv.precio.oferta\r\n          ? showKeyValueText(inv.precio, \"oferta_precio\")\r\n          : null}\r\n        {showKeyValueText(inv.precio, \"precio_min\")}\r\n        <IconButton>\r\n          <PostAddIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ReceiptIcon />\r\n        </IconButton>\r\n        <Divider />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={2}>\r\n              <Avatar src={image} />\r\n            </Grid>\r\n            <Grid item xs container direction=\"column\">\r\n              <Grid item direction=\"row\" container>\r\n                <Grid item xs>\r\n                  <Typography\r\n                    className={classes.heading}\r\n                  >{`Marca: ${itemData.marca} `}</Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography\r\n                    className={classes.heading}\r\n                  >{`Modelo: ${itemData.modelo}`}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid item>\r\n                <Typography\r\n                  className={classes.heading}\r\n                >{`Descripcion: ${itemData.descripcion}`}</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container direction=\"column\">\r\n            {renderInv}\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\fakeDataToTest.ts",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\rootReducer.ts",[],"D:\\Users\\iory_\\Documents\\Project\\inventory_app\\client_react_ts\\src\\redux\\features\\user\\userSlice.ts",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"95","line":14,"column":18,"nodeType":"93","messageId":"94","endLine":14,"endColumn":25},{"ruleId":"91","severity":1,"message":"96","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"98","line":7,"column":11,"nodeType":"93","messageId":"94","endLine":7,"endColumn":21},{"ruleId":"91","severity":1,"message":"99","line":19,"column":10,"nodeType":"93","messageId":"94","endLine":19,"endColumn":24},{"ruleId":"91","severity":1,"message":"99","line":14,"column":10,"nodeType":"93","messageId":"94","endLine":14,"endColumn":24},{"ruleId":"91","severity":1,"message":"100","line":14,"column":26,"nodeType":"93","messageId":"94","endLine":14,"endColumn":34},{"ruleId":"91","severity":1,"message":"101","line":65,"column":9,"nodeType":"93","messageId":"94","endLine":65,"endColumn":16},{"ruleId":"91","severity":1,"message":"102","line":66,"column":20,"nodeType":"93","messageId":"94","endLine":66,"endColumn":31},{"ruleId":"91","severity":1,"message":"103","line":12,"column":8,"nodeType":"93","messageId":"94","endLine":12,"endColumn":20},{"ruleId":"91","severity":1,"message":"99","line":16,"column":10,"nodeType":"93","messageId":"94","endLine":16,"endColumn":24},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"@typescript-eslint/no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","'signOut' is defined but never used.","'ReactNode' is defined but never used.","'SignIn' is defined but never used.","'IAuthProps' is defined but never used.","'fakeReduxStore' is defined but never used.","'itemData' is defined but never used.","'classes' is assigned a value but never used.","'setItemList' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]