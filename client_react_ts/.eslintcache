[{"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx":"1","/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts":"2","/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx":"3","/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js":"4","/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts":"5","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts":"6","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts":"7","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx":"8","/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx":"9","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx":"10","/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx":"11","/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx":"12","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts":"13","/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts":"14","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx":"15","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx":"16","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx":"17","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx":"18","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx":"19","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx":"20","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx":"21","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx":"22","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx":"23","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx":"24","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts":"25","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts":"26","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts":"27","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx":"28","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx":"29","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts":"30","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx":"31","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx":"32","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx":"33","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx":"34","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx":"35","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx":"36","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx":"37","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx":"38","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx":"39","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx":"40","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx":"41","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx":"42","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx":"43","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx":"44","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx":"45","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx":"46","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts":"47","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx":"48","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx":"49","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx":"50","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx":"51","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts":"52","/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx":"53","/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx":"54","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx":"55","/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx":"56","/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx":"57","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx":"58","/home/celloo/Projects/inventory_app/client_react_ts/src/components/SearchBar.tsx":"59","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx":"60","/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx":"61","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx":"62","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/helper.ts":"63","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowUsuarios.tsx":"64","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/SelectClientes.tsx":"65","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/ComponentToPrint.tsx":"66"},{"size":478,"mtime":1617144646218,"results":"67","hashOfConfig":"68"},{"size":425,"mtime":1615915047592,"results":"69","hashOfConfig":"68"},{"size":2219,"mtime":1618261295496,"results":"70","hashOfConfig":"68"},{"size":99,"mtime":1618011299432,"results":"71","hashOfConfig":"68"},{"size":640,"mtime":1618094533005,"results":"72","hashOfConfig":"68"},{"size":699,"mtime":1616176850171,"results":"73","hashOfConfig":"68"},{"size":2624,"mtime":1616176850019,"results":"74","hashOfConfig":"68"},{"size":2544,"mtime":1618873432285,"results":"75","hashOfConfig":"68"},{"size":1311,"mtime":1615915047584,"results":"76","hashOfConfig":"68"},{"size":1148,"mtime":1618863521886,"results":"77","hashOfConfig":"68"},{"size":541,"mtime":1616176849711,"results":"78","hashOfConfig":"68"},{"size":2194,"mtime":1618863422700,"results":"79","hashOfConfig":"68"},{"size":331,"mtime":1615915047592,"results":"80","hashOfConfig":"68"},{"size":2220,"mtime":1617301189290,"results":"81","hashOfConfig":"68"},{"size":945,"mtime":1618935654755,"results":"82","hashOfConfig":"68"},{"size":978,"mtime":1617839214909,"results":"83","hashOfConfig":"68"},{"size":3216,"mtime":1617743364726,"results":"84","hashOfConfig":"68"},{"size":312,"mtime":1617393041063,"results":"85","hashOfConfig":"68"},{"size":1312,"mtime":1617048618887,"results":"86","hashOfConfig":"68"},{"size":1776,"mtime":1618261295496,"results":"87","hashOfConfig":"68"},{"size":1567,"mtime":1618868230009,"results":"88","hashOfConfig":"68"},{"size":1787,"mtime":1618868250757,"results":"89","hashOfConfig":"68"},{"size":139,"mtime":1617316257026,"results":"90","hashOfConfig":"68"},{"size":2883,"mtime":1618963803396,"results":"91","hashOfConfig":"68"},{"size":412,"mtime":1618261295520,"results":"92","hashOfConfig":"68"},{"size":840,"mtime":1618444053966,"results":"93","hashOfConfig":"68"},{"size":1167,"mtime":1618007234783,"results":"94","hashOfConfig":"68"},{"size":2208,"mtime":1618863852696,"results":"95","hashOfConfig":"68"},{"size":1234,"mtime":1618348920849,"results":"96","hashOfConfig":"68"},{"size":1465,"mtime":1617927107253,"results":"97","hashOfConfig":"68"},{"size":1542,"mtime":1618863711449,"results":"98","hashOfConfig":"68"},{"size":2129,"mtime":1618937067228,"results":"99","hashOfConfig":"68"},{"size":2744,"mtime":1618604239813,"results":"100","hashOfConfig":"68"},{"size":2030,"mtime":1618868171591,"results":"101","hashOfConfig":"68"},{"size":1629,"mtime":1617918091446,"results":"102","hashOfConfig":"68"},{"size":1479,"mtime":1617393041031,"results":"103","hashOfConfig":"68"},{"size":1335,"mtime":1617393041031,"results":"104","hashOfConfig":"68"},{"size":1304,"mtime":1617393041031,"results":"105","hashOfConfig":"68"},{"size":1196,"mtime":1617393041031,"results":"106","hashOfConfig":"68"},{"size":1181,"mtime":1618444053966,"results":"107","hashOfConfig":"68"},{"size":989,"mtime":1618935689784,"results":"108","hashOfConfig":"68"},{"size":2917,"mtime":1618879426939,"results":"109","hashOfConfig":"68"},{"size":3324,"mtime":1618863582291,"results":"110","hashOfConfig":"68"},{"size":869,"mtime":1617393041031,"results":"111","hashOfConfig":"68"},{"size":3353,"mtime":1618862375962,"results":"112","hashOfConfig":"68"},{"size":1130,"mtime":1618444053966,"results":"113","hashOfConfig":"68"},{"size":264,"mtime":1618348920849,"results":"114","hashOfConfig":"68"},{"size":353,"mtime":1615915047588,"results":"115","hashOfConfig":"68"},{"size":1963,"mtime":1618874112289,"results":"116","hashOfConfig":"68"},{"size":1559,"mtime":1618863666105,"results":"117","hashOfConfig":"68"},{"size":2254,"mtime":1618445706419,"results":"118","hashOfConfig":"68"},{"size":4013,"mtime":1618939952904,"results":"119","hashOfConfig":"68"},{"size":453,"mtime":1617320585941,"results":"120","hashOfConfig":"68"},{"size":2078,"mtime":1615915047584,"results":"121","hashOfConfig":"68"},{"size":471,"mtime":1615915047588,"results":"122","hashOfConfig":"68"},{"size":1046,"mtime":1615915047588,"results":"123","hashOfConfig":"68"},{"size":602,"mtime":1616271845772,"results":"124","hashOfConfig":"68"},{"size":710,"mtime":1617144646222,"results":"125","hashOfConfig":"68"},{"size":1578,"mtime":1618863437284,"results":"126","hashOfConfig":"68"},{"size":294,"mtime":1618863467901,"results":"127","hashOfConfig":"68"},{"size":548,"mtime":1615915047588,"results":"128","hashOfConfig":"68"},{"size":919,"mtime":1617919904504,"results":"129","hashOfConfig":"68"},{"size":274,"mtime":1618872831251,"results":"130","hashOfConfig":"68"},{"size":1009,"mtime":1618935810890,"results":"131","hashOfConfig":"68"},{"size":1334,"mtime":1618937139533,"results":"132","hashOfConfig":"68"},{"size":5592,"mtime":1618963652784,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"8hdc3h",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"136"},{"filePath":"284","messages":"285","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/celloo/Projects/inventory_app/client_react_ts/src/index.tsx",[],["286","287"],"/home/celloo/Projects/inventory_app/client_react_ts/src/reportWebVitals.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/App.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/localIp.js",[],["288","289"],"/home/celloo/Projects/inventory_app/client_react_ts/src/paths.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/stores.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/user/userSlice.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/SignIn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/ErrorHandler.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/Home.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/AuthRouth.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/NavBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/rootReducer.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/redux/features/recibo/reciboSlice.ts",["290"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//TODO: agregar recibo venta transferencia\nconst initialState: Recibos = {\n  empresa_cliente_id: null,\n  usuario_id: null,\n  venta: {\n    lineas: [],\n  },\n  transferencia: {\n    lineas: [],\n  },\n};\n\ninterface Tipo {\n  tipo: string;\n}\n\nconst reciboSlice = createSlice({\n  name: \"recibos\",\n  initialState,\n  reducers: {\n    //TODO: add change qty reducer\n    addUserId: (state, action) => {\n      state.usuario_id = action.payload;\n    },\n    delUserId: (state) => {\n      state.usuario_id = null;\n    },\n    addClienteId: (state, action) => {\n      console.log(action.payload);\n      state.empresa_cliente_id = action.payload;\n    },\n    modQty: (state, action) => {\n      console.log(action.payload);\n      const tipoRecibo = action.payload.tipo;\n      let { idx, qty } = action.payload;\n      if (qty < 0) qty = 0\n      state[tipoRecibo].lineas[idx].qty = qty;\n    },\n    pushLinea: (state, action: PayloadAction<Lineas & Tipo>) => {\n      //TODO: revisar si existe o no el item pusheado, si qty del payload es mayor actualizar la qty\n      const tipoRecibo = action.payload.tipo;\n      const hasId = state[tipoRecibo].lineas.some(\n        (linea) => linea.id === action.payload.id\n      );\n      if (hasId) {\n        state[tipoRecibo].lineas.filter((linea, idx) => {\n          if (linea.id === action.payload.id) {\n            state[tipoRecibo].lineas[idx] = action.payload;\n          }\n        });\n      } else {\n        state[tipoRecibo].lineas.push(action.payload);\n      }\n    },\n    addRecibo: (state, action: PayloadAction<Recibos & Tipo>) => {\n      const tipoRecibo = action.payload.tipo;\n      state[tipoRecibo] = action.payload;\n    },\n    deleteLinea: (state, action: PayloadAction<Tipo & { item_id: number }>) => {\n      const tipoRecibo = action.payload.tipo;\n      console.log(action.payload);\n      const newArr = state[tipoRecibo].lineas.filter(\n        (linea) => linea.id !== action.payload.item_id\n      );\n      state[tipoRecibo].lineas = newArr;\n    },\n  },\n});\n\nexport const {\n  addUserId,\n  delUserId,\n  addClienteId,\n  pushLinea,\n  modQty,\n  addRecibo,\n  deleteLinea,\n} = reciboSlice.actions;\n\nexport default reciboSlice.reducer;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/transferencia/ShowTransferencias.tsx",["291","292"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n}));\n\nexport default function ShowTransferencias() {\n    const classes = useStyles();\n\n    const url = '/recibos/transferencia'\n    const { data, setData } = useFetchData(url)\n\n    const accordionView = data.map(obj =>\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n            >\n                <Typography className={classes.heading}>N° Recibo: {obj.id}</Typography>\n                <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n                <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <TableContainer component={Paper}>\n                    <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Descripcion</TableCell>\n                                <TableCell align=\"center\">Qty</TableCell>\n                                <TableCell align=\"right\">Origen</TableCell>\n                                <TableCell align=\"right\">Destino</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {obj.lineas.map(linea => (\n                                <TableRow key={linea.id}>\n                                    <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                                    <TableCell align=\"left\">\n                                        {linea.qty}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{`${linea.item.lugar.direccion}, ${linea.item.lugar.tipo}`}</TableCell>\n                                    <TableCell align=\"right\">\n                                        {`${linea.destino.direccion}, ${linea.destino.tipo}`}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </AccordionDetails>\n        </Accordion>\n    )\n\n    return (\n        <>\n            <Typography variant='h3'>Recibos Ventas</Typography>\n            {accordionView}\n        </>\n    )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useDynamicComponent.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddRol.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCliente.tsx",["293","294","295"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\nimport useFormImage from \"../../utils/hooks/useFormImage\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Cliente {\n  nombre: string;\n  telefono: string;\n  direccion: string;\n  email: string;\n  logo_url: string;\n  website_url: string;\n  telefono_2: string;\n}\n\nexport default function AddCliente() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Cliente>(\n    {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n    \"/clientes/addUser\"\n  );\n\n  const clienteDetails = [\n    \"nombre\",\n    \"direccion\",\n    \"telefono\",\n    \"telefono 2\",\n    \"email\",\n    \"website\",\n  ];\n\n  const renderTextField = clienteDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n      // helperText={errors[detail]}\n      // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"lg\" fixed>\n      <Typography variant=\"h2\">Agregar Cliente</Typography>\n      {renderTextField}\n      <UploadAndPreviewImages previewImg={previewImg} onChange={handleChange} />\n      {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Agregar\n      </Button>\n      <br></br>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddDefectuoso.tsx",["296"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport useForm from \"../../utils/hooks/useForm\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\ninterface Defectuoso {\n  descripcion: string;\n}\n\nexport default function AddDefectuoso(props: any) {\n  const classes = useStyle();\n  const { data, handleSubmit, handleChange } = useForm<Defectuoso>(\n    {\n      descripcion: \"\",\n    },\n    \"/defectuoso\"\n  );\n  //   const [previewImg, setPreviewImg] = useState(\"\");\n\n  const defectuosoDetails = [\"descripcion\"];\n\n  const renderTextField = defectuosoDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Defectuoso</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          onChange={handleChange}\n          name=\"items\"\n          url=\"items\"\n          value={data}\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddUser.tsx",["297"],"import useFormImage from \"../../utils/hooks/useFormImage\";\nimport SelectsOptions from \"./components/SelectsOptions\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\n\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\nexport default function AddUsuario() {\n  const classes = useStyle();\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSubmit,\n  } = useFormImage<Usuario>(\n    {\n      nombre: \"\",\n      password: \"\",\n      telefono: \"\",\n      rol_id: 1,\n    },\n    \"/usuarios/addUser\"\n  );\n\n  const usuarioDetails = [\n    \"nombre\",\n    \"password\",\n    \"telefono\",\n    \"email\",\n    \"telefono_2\",\n  ];\n\n  const renderTextField = usuarioDetails.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n\n  return (\n    <Container maxWidth=\"sm\" fixed>\n      <Typography variant=\"h2\">Agregar Usuario</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        {renderTextField}\n        <SelectsOptions\n          className={classes.selects}\n          onChange={handleChange}\n          name=\"rol\"\n          url=\"usuarios/roles\"\n          value={data}\n        />\n        <UploadAndPreviewImages\n          previewImg={previewImg}\n          onChange={handleChange}\n        />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </Container>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/index.tsx",["298"],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/useStyle.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFetchData.ts",["299"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useFetchData(url, method = \"get\") {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [error, setError] = useState(\"\");\n  console.log(error);\n  console.log(\"fetch api\", url);\n  useEffect(() => {\n    console.log(\"use effect fetchDatafrom api\");\n    const fetchDataFromApi = async () => {\n      try {\n        setIsFetching(true);\n        const res = await axios[method](url);\n        setData(res.data);\n        console.log(\"useFetchData res.data:  \", res.data);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n        setIsFetching(false);\n      }\n    };\n    fetchDataFromApi();\n  }, [url]);\n  console.log(error);\n  return { data, setData, isFetching, error };\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useForm.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/index.tsx",["300","301","302"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport DevolucionTable from \"./components/DevolucionTable\";\nimport { Button } from \"@material-ui/core\";\n\n//redux\nimport { RootState } from \"../../../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nimport Header from \"./components/Header\";\nexport interface VentaYDevoluciones {\n  ventas?: VentasEntity[] | null;\n  devoluciones?: null[] | null;\n}\nexport interface VentasEntity {\n  id: number;\n  venta_id: number;\n  item_id: number;\n  qty: number;\n  precio: number;\n  tax?: null;\n  total?: null;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: null;\n  item: Item;\n}\nexport interface Item {\n  id: number;\n  marca: string;\n  modelo: string;\n  color: string;\n  stock: number;\n  descripcion: string;\n  barcode: string;\n  sku: string;\n  precio_id: number;\n  categoria_id: number;\n  categoria_2_id?: null;\n  lugar_id: number;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: null;\n}\n\nexport default function Devolucion() {\n  //TODO: maybe change all this useState to a reduceState\n  const [clientId, setClientId] = useState<number>();\n  // TODO: select item id deb ser un item entero y no un id para ser usado en la tabla\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [lineas, setLineas] = useState<VentaYDevoluciones>();\n  const [hasLineas, setHasLineas] = useState(false);\n\n  const getLineasVentaYDevolucion = async () => {\n    try {\n      const res = await axios.get(`/recibos/devolucion/clientId/${clientId}`);\n      console.log(res.data);\n      setLineas(res.data);\n      setHasLineas(true);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    if (clientId) {\n      getLineasVentaYDevolucion();\n    }\n    console.log(\"useEffect lineas\", lineas);\n  }, [clientId]);\n\n  return (\n    <>\n      <Header\n        useStates={[\n          clientId,\n          setClientId,\n          selectedItems,\n          setSelectedItems,\n          hasLineas,\n          setHasLineas,\n          lineas,\n          setLineas,\n        ]}\n      />\n      <DevolucionTable items={selectedItems} />\n      <Button variant=\"contained\">agregar recibo</Button>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/Header.tsx",["303"],"import { useState } from \"react\";\nimport SelectsOptions from \"../../../components/SelectsOptions\";\nimport { Paper } from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addClienteId } from \"../../../../../redux/features/recibo/reciboSlice\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { useStyle } from \"../../../useStyle\";\n\nexport default function HeaderTable({ creditState, clienteState }) {\n  const classes = useStyle();\n  const [isCredit, setIsCredit] = creditState;\n  const [clientId, setClientId] = clienteState;\n  const dispatch = useDispatch();\n\n  const onChangeHandler = (e) => {\n    console.log(e.target.value);\n    setClientId(e.target.value);\n    dispatch(addClienteId(e.target.value));\n  };\n  return (\n    <Paper>\n      <SelectsOptions\n        className={classes.selects}\n        onChange={onChangeHandler}\n        name=\"cliente\"\n        url={\"clientes\"}\n        value={clientId}\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isCredit}\n            onChange={(e) => setIsCredit(!isCredit)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Credito\"\n      />\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormImage.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/DevolucionTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/devolucion/components/Header.tsx",["304","305"],"import SelectsOptions from \"../../../components/SelectsOptions\";\nimport SelectClientes from '../../components/SelectClientes'\nimport { Paper } from \"@material-ui/core\";\n\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyle } from \"../../../useStyle\";\n\nimport { VentaYDevoluciones } from \"../\";\ninterface UseStates {\n  clientId: any;\n  setClientId: any;\n  selectedItemId: any;\n  setSelectedItemId: any;\n  hasLineas: any;\n  setHasLineas: any;\n  lineas: VentaYDevoluciones;\n  setLineas: any;\n}\n\nexport default function Header({ useStates }) {\n  const classes = useStyle();\n  const [\n    clientId,\n    setClientId,\n    selectedItems,\n    setSelectedItems,\n    hasLineas,\n    lineas,\n    setLineas,\n  ] = useStates;\n\n  return (\n    <Paper>\n      <SelectClientes\n        className={classes.selects}\n        onChange={(e) => {\n          setClientId(e.target.value);\n        }}\n        url={\"clientes\"}\n        value={clientId}\n      />\n\n      {hasLineas ? (\n        <>\n          <InputLabel id={\"lineas\"}>Item a devolver</InputLabel>\n          <Select\n            onChange={(e) => {\n              const { value } = e.target;\n              const item = value[0];\n              const lineaId = value[1];\n              setSelectedItems(selectedItems.concat(item));\n\n              const newVentas = lineas.ventas.filter(\n                (lineaVenta) => lineaVenta.id !== lineaId\n              );\n\n              setLineas((prevState) => {\n                return { ...prevState, ventas: newVentas };\n              });\n              // if (lineas.ventas.length === 1) setHasLineas(false);\n            }}\n            labelId={\"lineas\"}\n            id={\"lineas\"}\n            name={\"lineas\"}\n            fullWidth\n          >\n            {lineas?.ventas?.map((linea) => (\n              <MenuItem\n                value={[linea.item, linea.id]}\n              >{`${linea.item.marca} ${linea.item.modelo} ${linea.item.descripcion}, recibo N° ${linea.venta_id}`}</MenuItem>\n            ))}\n          </Select>\n        </>\n      ) : (\n        \"aqui aparece un select item a devolver\"\n      )}\n    </Paper>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/venta/components/VentaTable.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/SelectsOptions.tsx",["306"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Modal from \"./Modal\";\n\nexport default function SelectsOptions({\n  className,\n  onChange,\n  name,\n  url,\n  value,\n}) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  let menuItemToShow = [];\n\n  switch (url) {\n    case \"categorias\":\n    case \"proveedores\":\n      menuItemToShow.push(\"nombre\");\n      break;\n    case \"items\":\n      menuItemToShow.push(\"marca\");\n      menuItemToShow.push(\"modelo\");\n      break;\n    case \"usuarios/roles\":\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"lugares\":\n      menuItemToShow.push(\"direccion\");\n      menuItemToShow.push(\"tipo\");\n      break;\n    case \"clientes\":\n      menuItemToShow.push(\"nombre\");\n      menuItemToShow.push(\"direccion\");\n      break;\n  }\n\n  console.log(name, url, data);\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {menuItemToShow.length > 1\n        ? `${data[menuItemToShow[0]]}, ${data[menuItemToShow[1]]}`\n        : `${data[menuItemToShow[0]]}`}\n    </MenuItem>\n  ));\n\n  const name_id = `${name}_id`;\n\n  return (\n    <Grid item key={`${name}-select`}>\n      <InputLabel id={name_id}>{name}</InputLabel>\n      <Select\n        className={className}\n        onChange={onChange}\n        labelId={name_id}\n        id={name_id}\n        name={name_id}\n        value={value[name_id]}\n        fullWidth\n      >\n        {dataMenuItem}\n        <MenuItem key={`add_${name}`} onClick={() => setOpenModal(true)}>\n          agregar otra {name}\n        </MenuItem>\n      </Select>\n      <Modal state={[openModal, setOpenModal]} fetch={fetchData} url={url} />\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/TableContainer.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddProveedor.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddLugar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddCategoria.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowProveedores.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowClentes.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowRoles.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/AddItem.tsx",["307","308","309"],"import SelectsOptions from \"./components/SelectsOptions\";\nimport useFormMultipleImages from \"../../utils/hooks/useFormMultipleImages\";\nimport UploadAndPreviewImages from \"../../components/UploadAndPreviewImages\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n//MUI\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyle } from \"./useStyle\";\n\n\nconst detailsName = [\n  \"marca\",\n  \"modelo\",\n  \"color\",\n  \"sku\",\n  \"precio\",\n  \"precio_min\",\n  \"stock\",\n  \"costo\",\n  \"descripcion\",\n];\n\nexport default function AddItem() {\n  const classes = useStyle();\n  const initialItem = {\n    marca: \"\",\n    modelo: \"\",\n    caracteritica: \"\",\n    descripcion: \"\",\n    sku: \"\",\n    color: \"\",\n    precio: null,\n    precio_min: null,\n    categoria_id: 0,\n    stock: null,\n    lugar_id: 0,\n    proveedor_id: null,\n    costo: null,\n  };\n  // const { data, previewImg, handleChange, handleSubmit } = useFormImage<Item>(\n  //   initialItem,\n  //   \"/items\"\n  // );\n  const {\n    data,\n    previewImg,\n    handleChange,\n    handleSelectChange,\n    handleSubmit,\n    handleImgChange,\n  } = useFormMultipleImages<Item>(initialItem, \"/items\");\n\n  const renderTextField = detailsName.map((name) => (\n    <Grid item>\n      <TextField\n        className={classes[name]}\n        key={name}\n        id={name}\n        name={name}\n        label={name}\n        value={data[name]}\n        onChange={handleChange}\n      // fullWidth\n      // helperText={errors[name]}\n      // error={errors[name] ? true : false}\n      />\n    </Grid>\n  ));\n\n  return (\n    <>\n      <Typography variant=\"h2\">Agregar Item</Typography>\n      <form noValidate onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          {renderTextField}\n        </Grid>\n\n        <Grid container spacing={2}>\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleSelectChange}\n            name=\"categoria\"\n            url=\"categorias\"\n            value={data}\n          />\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleSelectChange}\n            name=\"proveedor\"\n            url=\"proveedores\"\n            value={data}\n          />\n          <SelectsOptions\n            className={classes.selects}\n            onChange={handleSelectChange}\n            name=\"lugar\"\n            url=\"lugares\"\n            value={data}\n          />\n        </Grid>\n        {/* <UploadAndPreviewImages\n          previewImg={previewImg}\n          onChange={handleChange}\n        /> */}\n        <DropzoneArea onChange={handleImgChange} acceptedFiles={[\"image/*\"]} maxFileSize={10000000} />\n        {/* {errors.general && (\n          <Typography variant=\"body2\">{errors.general}</Typography>\n        )} */}\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Agregar\n        </Button>\n        <br></br>\n      </form>\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/recibos/ventas/ShowVentas.tsx",["310"],"import useFetchData from \"../../../../utils/hooks/useFetchData\";\nimport { Accordion, AccordionSummary, AccordionDetails, Typography, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport dayjs from 'dayjs'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n}));\n\nexport default function ShowVentas() {\n  const classes = useStyles();\n\n  const url = '/recibos/venta'\n  const { data, setData } = useFetchData(url)\n\n  const accordionView = data.map(obj =>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography >N° Recibo: {obj.id}</Typography>\n        <Typography className={classes.heading}>Ciente: {obj.cliente.nombre}</Typography>\n        <Typography className={classes.heading}>Vendedor: {obj.usuario.nombre}</Typography>\n        <Typography >Fecha: {dayjs(obj.created_at).format('DD-MMM-YYYY hh:mm a')}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: 300 }} padding=\"default\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Qty</TableCell>\n                <TableCell align=\"center\">Descripcion</TableCell>\n                <TableCell align=\"right\">Precio</TableCell>\n                <TableCell align=\"right\">Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {obj.lineas.map(linea => (\n                <TableRow key={linea.id}>\n                  <TableCell align=\"left\">\n                    {linea.qty}\n                  </TableCell>\n                  <TableCell align=\"left\">{`${linea.marca} ${linea.modelo} ${linea.color} ${linea.descripcion} id: ${linea.id} `}</TableCell>\n                  <TableCell align=\"right\">{linea.precio.toFixed(2)}</TableCell>\n                  <TableCell align=\"right\">\n                    {(linea.precio * linea.qty).toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell rowSpan={3} />\n                <TableCell colSpan={2}>Subtotal</TableCell>\n                <TableCell align=\"right\">{obj.sub_total}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={1}>Tax</TableCell>\n                <TableCell align=\"right\">{`${(obj.tax * 100).toFixed(0)} %`}</TableCell>\n                <TableCell align=\"right\">{obj.tax}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2}>Total</TableCell>\n                <TableCell align=\"right\">{obj.total}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </AccordionDetails>\n    </Accordion>\n  )\n\n  return (\n    <>\n      <Typography variant='h3'>Recibos Ventas</Typography>\n      {accordionView}\n    </>\n  )\n}","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowLugares.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/ShowItems.tsx",["311"],"import { localIp } from \"../../../localIp\";\nimport { useState } from \"react\";\nimport SearchBar from \"../../../components/SearchBar\";\nimport useFetchData from \"../../../utils/hooks/useFetchData\";\nimport Fab from \"../../../components/FloatBtnAdd\";\nimport EditFormDialog from \"../../../components/EditableField/EditFormDialog\";\nimport DeleteBtn from \"../../../components/DeleteBtn\";\nimport AddBtn from \"./components/AddBtn\";\n\nimport {\n  Paper,\n  MobileStepper,\n  Typography,\n  Button,\n  CardContent,\n  CardActions,\n  Card,\n  Grid,\n} from \"@material-ui/core/\";\n\nexport default function ShowItems() {\n  const url = \"/items\";\n  const { data, setData } = useFetchData(url);\n  const [activeStep, setActiveStep] = useState(0);\n  console.log(!data.length);\n  const cardView = data.map((obj) => {\n    const src = \"http://\" + localIp + \":5050/uploads/\";\n    const imgPlaceholder = \"https://via.placeholder.com/200\";\n    const activeImg =\n      obj.images.length > 0\n        ? src + obj.images[activeStep].url_path\n        : imgPlaceholder;\n    const maxSteps = obj.images.length;\n    return (\n      <Grid item xs={12} sm={6} md={4} lg={3} key={obj.id}>\n        <Card\n          style={{\n            maxWidth: 300,\n          }}\n        >\n          <img key=\"img\" src={activeImg} alt={obj.marca + \"-\" + obj.modelo} />\n          <MobileStepper\n            key=\"mobileStepper\"\n            steps={maxSteps}\n            position=\"static\"\n            variant=\"text\"\n            nextButton={\n              <Button\n                id=\"mobileSteperNextBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep + 1)\n                }\n                disabled={activeStep === maxSteps - 1}\n              >\n                Next\n              </Button>\n            }\n            backButton={\n              <Button\n                id=\"mobileSteperBackBtn\"\n                size=\"small\"\n                onClick={() =>\n                  setActiveStep((prevActiveStep) => prevActiveStep - 1)\n                }\n                disabled={activeStep === 0}\n              >\n                Back\n              </Button>\n            }\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              {`${obj.marca} ${obj.modelo} ${obj.color} ${obj.descripcion}`}\n            </Typography>\n            <EditFormDialog name={\"descripcion\"} data={obj} url={url} />\n            <Typography>\n              {`Ubicacion: ${obj.lugar.direccion}, ${obj.lugar.tipo}. | Stock: ${obj.stock}`}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <DeleteBtn url={url} id={obj.id} data={data} setData={setData} />\n            <AddBtn obj={obj} reciboTipo=\"venta\">\n              agregar a venta\n            </AddBtn>\n            <AddBtn obj={obj} reciboTipo=\"transferencia\">\n              transferir\n            </AddBtn>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  });\n  return (\n    <>\n      <Typography variant=\"h3\">Items</Typography>\n      <SearchBar setResData={setData} url={url} />\n      <Grid\n        container\n        spacing={2}\n        justify=\"center\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        {!data.length ? \"no hay item\" : cardView}\n      </Grid>\n      <Fab url=\"/add/item\" />\n    </>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowCategorias.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/utils/index.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/index.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/Modal.tsx",["312","313"],"import {\n  DialogTitle,\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport useForm from \"../../../utils/hooks/useForm\";\n\nexport default function Modal({ state, url, fetch }) {\n  let [openModal, setOpenModal] = state;\n\n  const initialState = {\n    lugares: {\n      direccion: \"\",\n      tipo: \"\",\n    },\n    categorias: { nombre: \"\" },\n    proveedores: {\n      nombre: \"\",\n      direccion: \"\",\n      telefono: \"\",\n    },\n    \"usuarios/roles\": {\n      tipo: \"\",\n    },\n    clientes: {\n      nombre: \"\",\n      telefono: \"\",\n      direccion: \"\",\n      email: \"\",\n      logo_url: \"\",\n      website_url: \"\",\n      telefono_2: \"\",\n    },\n  };\n\n  const textFieldLabel = Object.keys(initialState[url]);\n\n  const {\n    data,\n    loading,\n    handleChange,\n    handleSubmit,\n    handleSubmitPromise,\n  } = useForm(initialState[url], `/${url}`);\n\n  const renderTextField = textFieldLabel.map((detail) => (\n    <TextField\n      key={detail}\n      id={detail}\n      name={detail}\n      label={detail}\n      value={data[detail]}\n      onChange={handleChange}\n      fullWidth\n    // helperText={errors[detail]}\n    // error={errors[detail] ? true : false}\n    />\n  ));\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n  const handleClick = async (e) => {\n    await handleSubmitPromise(e);\n    fetch();\n    setOpenModal(false);\n  };\n  const checkValues = Object.values(data).every(e => !e)\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={openModal}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <DialogContent>{renderTextField}</DialogContent>\n      <DialogActions>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n          disabled={checkValues}\n        >\n          aceptar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/ModQty.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/transferenciaTable/Table.tsx",["314","315","316"],"import Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDispatch } from \"react-redux\";\nimport { deleteLinea } from \"../../../../../../redux/features/recibo/reciboSlice\";\n\nimport ModQty from '../../../components/ModQty'\nimport SelectLugar from \"../SelectLugar\";\n\n\nfunction OrderTable({ items, onClickHandler, destinoId, onSelectHandler }) {\n\n  const showRows = items.map((row, idx) => (\n    <TableRow key={row.id}>\n      <TableCell align=\"left\">\n        {/* <DelRow item_id={row.id} /> */}\n        {/* {row.qty} */}\n        <ModQty item={row} reciboTipo=\"transferencia\" idx={idx} />\n      </TableCell>\n      <TableCell align=\"left\">{`${row.marca} ${row.modelo} ${row.color} ${row.descripcion} `}</TableCell>\n      <TableCell align=\"center\">\n        {row.lugar.direccion}, {row.lugar.tipo}\n      </TableCell>\n      <TableCell align=\"center\">\n\n        <SelectLugar\n          destinoId={destinoId}\n          onChange={onSelectHandler}\n          name=\"lugar\"\n          currLugarId={row.lugar.id}\n        />\n      </TableCell>\n    </TableRow>\n  ));\n\n  return (\n    <TableContainer component={Paper}>\n      <Table style={{ minWidth: 425 }} padding=\"default\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Qty</TableCell>\n            <TableCell align=\"center\">Descripcion</TableCell>\n            <TableCell align=\"center\">Origen</TableCell>\n            <TableCell align=\"center\">Destino</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {showRows}\n          <TableRow>\n            <IconButton size=\"small\" onClick={onClickHandler}>\n              <AddBoxIcon />\n            </IconButton>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default OrderTable;\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/hooks/useFormMultipleImages.ts",["317"],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/FloatBtnAdd.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/EditableField/EditFormDialog.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/WithPaperView.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/paperView/DetailRow.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/DeleteBtn.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowItems/components/AddBtn.tsx",["318"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pushLinea } from \"../../../../redux/features/recibo/reciboSlice\";\nimport { RootState } from \"../../../../redux/rootReducer\";\n\nexport default function AddBtn({ obj, reciboTipo, children }) {\n  const recibo = useSelector((state: RootState) => state.recibo);\n  const dispatch = useDispatch();\n  return (\n    <Button\n      onClick={() => {\n        const { lineas } = recibo[reciboTipo];\n        const newLinea = { ...obj };\n        newLinea.tipo = reciboTipo;\n        newLinea.qty = 1;\n        dispatch(pushLinea(newLinea));\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/components/SearchBar.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesUpload.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/components/UploadAndPreviewImages/ImagesPreview.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/transferencia/components/SelectLugar.tsx",["319"],"import { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport useFetchData from \"../../../../../utils/hooks/useFetchData\";\n\nexport default function SelectLugar({ destinoId, name, onChange, currLugarId }) {\n  const history = useHistory();\n  const { data } = useFetchData(\"lugares\");\n  const dataFiltered = data.filter(data => data.id !== currLugarId)\n  const dataMenuItem = dataFiltered.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      {`${data.direccion}, ${data.tipo}`}\n    </MenuItem>\n  ));\n\n  return (\n    <form>\n      <InputLabel>Destino</InputLabel>\n      <Select value={destinoId} onChange={onChange}>\n        {dataMenuItem}{\" \"}\n        <MenuItem\n          key={`add_${name}`}\n          onClick={() => history.push(`/add/${name}`)}\n        >\n          agregar otro {name}\n        </MenuItem>\n      </Select>\n    </form>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/utils/helper.ts",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/showData/ShowUsuarios.tsx",[],"/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/recibos/components/SelectClientes.tsx",["320","321","322"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Select, InputLabel, MenuItem } from \"@material-ui/core\";\n// import Modal from \"./Modal\";\n\nexport default function SelectsClientes({\n  className,\n  onChange,\n  url,\n  value,\n}) {\n  const [data, setData] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n\n  const fetchData = () => {\n    axios\n      .get(\"/\" + url)\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const dataMenuItem = data.map((data) => (\n    <MenuItem key={data.id} value={data.id}>\n      nombre: {data.nombre}\n    </MenuItem>\n  ));\n\n  return (\n    <Grid item key={`cliente-grid`}>\n      <InputLabel id={'cliente-input'}>Clientes</InputLabel>\n      <Select\n        className={className}\n        onChange={onChange}\n        labelId={'cliente'}\n        id={'clienteSelect'}\n        name={'cliente'}\n        value={value}\n        fullWidth\n      >\n        {dataMenuItem}\n        {/* <MenuItem key={`add_cliente`} onClick={() => setOpenModal(true)}>\n          agregar otra {cliente}\n        </MenuItem> */}\n      </Select>\n      {/* <Modal state={[openModal, setOpenModal]} fetch={fetchData} url={url} /> */}\n    </Grid>\n  );\n}\n","/home/celloo/Projects/inventory_app/client_react_ts/src/pages/addData/components/ComponentToPrint.tsx",["323","324","325"],{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":48,"column":54,"nodeType":"332","messageId":"333","endLine":48,"endColumn":56},{"ruleId":"334","severity":1,"message":"335","line":2,"column":69,"nodeType":"336","messageId":"337","endLine":2,"endColumn":73},{"ruleId":"334","severity":1,"message":"338","line":26,"column":19,"nodeType":"336","messageId":"337","endLine":26,"endColumn":26},{"ruleId":"334","severity":1,"message":"339","line":1,"column":8,"nodeType":"336","messageId":"337","endLine":1,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":11,"column":3,"nodeType":"336","messageId":"337","endLine":11,"endColumn":7},{"ruleId":"334","severity":1,"message":"340","line":26,"column":9,"nodeType":"336","messageId":"337","endLine":26,"endColumn":16},{"ruleId":"334","severity":1,"message":"335","line":10,"column":3,"nodeType":"336","messageId":"337","endLine":10,"endColumn":7},{"ruleId":"334","severity":1,"message":"335","line":11,"column":3,"nodeType":"336","messageId":"337","endLine":11,"endColumn":7},{"ruleId":"341","severity":1,"message":"342","line":69,"column":6,"nodeType":"343","endLine":69,"endColumn":24,"suggestions":"344"},{"ruleId":"341","severity":1,"message":"345","line":25,"column":6,"nodeType":"343","endLine":25,"endColumn":11,"suggestions":"346"},{"ruleId":"334","severity":1,"message":"347","line":7,"column":10,"nodeType":"336","messageId":"337","endLine":7,"endColumn":19},{"ruleId":"334","severity":1,"message":"348","line":8,"column":10,"nodeType":"336","messageId":"337","endLine":8,"endColumn":21},{"ruleId":"341","severity":1,"message":"349","line":70,"column":6,"nodeType":"343","endLine":70,"endColumn":16,"suggestions":"350"},{"ruleId":"334","severity":1,"message":"351","line":1,"column":10,"nodeType":"336","messageId":"337","endLine":1,"endColumn":18},{"ruleId":"334","severity":1,"message":"339","line":1,"column":8,"nodeType":"336","messageId":"337","endLine":1,"endColumn":22},{"ruleId":"334","severity":1,"message":"352","line":13,"column":11,"nodeType":"336","messageId":"337","endLine":13,"endColumn":20},{"ruleId":"341","severity":1,"message":"353","line":28,"column":6,"nodeType":"343","endLine":28,"endColumn":8,"suggestions":"354"},{"ruleId":"334","severity":1,"message":"355","line":3,"column":8,"nodeType":"336","messageId":"337","endLine":3,"endColumn":30},{"ruleId":"334","severity":1,"message":"356","line":7,"column":3,"nodeType":"336","messageId":"337","endLine":7,"endColumn":12},{"ruleId":"334","severity":1,"message":"357","line":51,"column":5,"nodeType":"336","messageId":"337","endLine":51,"endColumn":15},{"ruleId":"334","severity":1,"message":"338","line":26,"column":17,"nodeType":"336","messageId":"337","endLine":26,"endColumn":24},{"ruleId":"334","severity":1,"message":"358","line":11,"column":3,"nodeType":"336","messageId":"337","endLine":11,"endColumn":8},{"ruleId":"334","severity":1,"message":"359","line":43,"column":5,"nodeType":"336","messageId":"337","endLine":43,"endColumn":12},{"ruleId":"334","severity":1,"message":"360","line":45,"column":5,"nodeType":"336","messageId":"337","endLine":45,"endColumn":17},{"ruleId":"334","severity":1,"message":"361","line":10,"column":8,"nodeType":"336","messageId":"337","endLine":10,"endColumn":18},{"ruleId":"334","severity":1,"message":"362","line":12,"column":10,"nodeType":"336","messageId":"337","endLine":12,"endColumn":21},{"ruleId":"334","severity":1,"message":"363","line":13,"column":10,"nodeType":"336","messageId":"337","endLine":13,"endColumn":21},{"ruleId":"334","severity":1,"message":"364","line":8,"column":10,"nodeType":"336","messageId":"337","endLine":8,"endColumn":15},{"ruleId":"334","severity":1,"message":"365","line":13,"column":17,"nodeType":"336","messageId":"337","endLine":13,"endColumn":23},{"ruleId":"334","severity":1,"message":"366","line":1,"column":10,"nodeType":"336","messageId":"337","endLine":1,"endColumn":21},{"ruleId":"334","severity":1,"message":"367","line":13,"column":10,"nodeType":"336","messageId":"337","endLine":13,"endColumn":19},{"ruleId":"334","severity":1,"message":"368","line":13,"column":21,"nodeType":"336","messageId":"337","endLine":13,"endColumn":33},{"ruleId":"341","severity":1,"message":"353","line":27,"column":6,"nodeType":"343","endLine":27,"endColumn":8,"suggestions":"369"},{"ruleId":"370","severity":2,"message":"371","line":12,"column":29,"nodeType":"336","messageId":"372","endLine":12,"endColumn":37},{"ruleId":"370","severity":2,"message":"373","line":18,"column":31,"nodeType":"336","messageId":"372","endLine":18,"endColumn":37},{"ruleId":"370","severity":2,"message":"373","line":18,"column":45,"nodeType":"336","messageId":"372","endLine":18,"endColumn":51},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'SelectsOptions' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isTax' and 'tax'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTotal' needs the current value of 'tax'.","ArrayExpression",["376"],"React Hook useEffect has a missing dependency: 'method'. Either include it or remove the dependency array.",["377"],"'RootState' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'getLineasVentaYDevolucion' and 'lineas'. Either include them or remove the dependency array.",["378"],"'useState' is defined but never used.","'UseStates' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["379"],"'UploadAndPreviewImages' is defined but never used.","'Container' is defined but never used.","'previewImg' is assigned a value but never used.","'Paper' is defined but never used.","'loading' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'useDispatch' is defined but never used.","'deleteLinea' is defined but never used.","'error' is assigned a value but never used.","'lineas' is assigned a value but never used.","'FormControl' is defined but never used.","'openModal' is assigned a value but never used.","'setOpenModal' is assigned a value but never used.",["380"],"no-restricted-globals","Unexpected use of 'location'.","defaultMessage","Unexpected use of 'status'.","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},"Update the dependencies array to be: [isTax, lineas, subTotal, tax]",{"range":"390","text":"391"},"Update the dependencies array to be: [method, url]",{"range":"392","text":"393"},"Update the dependencies array to be: [clientId, getLineasVentaYDevolucion, lineas]",{"range":"394","text":"395"},"Update the dependencies array to be: [fetchData]",{"range":"396","text":"397"},{"range":"398","text":"397"},[2137,2155],"[isTax, lineas, subTotal, tax]",[761,766],"[method, url]",[1820,1830],"[clientId, getLineasVentaYDevolucion, lineas]",[602,604],"[fetchData]",[598,600]]